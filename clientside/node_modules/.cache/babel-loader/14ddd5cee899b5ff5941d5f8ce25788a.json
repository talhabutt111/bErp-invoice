{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n} // Used to cancel events.\n\n\nvar preventDefault = function preventDefault(e) {\n  return e.preventDefault();\n};\n\nvar Pagination = function (_Component) {\n  _inherits(Pagination, _Component);\n\n  function Pagination() {\n    _classCallCheck(this, Pagination);\n\n    return _possibleConstructorReturn(this, (Pagination.__proto__ || Object.getPrototypeOf(Pagination)).apply(this, arguments));\n  }\n\n  _createClass(Pagination, [{\n    key: 'shouldComponentUpdate',\n    value: function shouldComponentUpdate(nextProps) {\n      var props = this.props;\n      return props.totalPages !== nextProps.totalPages || props.currentPage !== nextProps.currentPage || props.showPages !== nextProps.showPages;\n    }\n  }, {\n    key: 'onChangePage',\n    value: function onChangePage(pageNumber, event) {\n      event.preventDefault();\n      this.props.onChangePage(pageNumber);\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _props = this.props,\n          totalPages = _props.totalPages,\n          showPages = _props.showPages,\n          currentPage = _props.currentPage;\n\n      if (totalPages === 0) {\n        return null;\n      }\n\n      var diff = Math.floor(showPages / 2),\n          start = Math.max(currentPage - diff, 0),\n          end = Math.min(start + showPages, totalPages);\n\n      if (totalPages >= showPages && end >= totalPages) {\n        start = totalPages - showPages;\n      }\n\n      var buttons = [],\n          btnEvent,\n          isCurrent;\n\n      for (var i = start; i < end; i++) {\n        isCurrent = currentPage === i; // If the button is for the current page then disable the event.\n\n        if (isCurrent) {\n          btnEvent = preventDefault;\n        } else {\n          btnEvent = this.onChangePage.bind(this, i);\n        }\n\n        buttons.push(_react2.default.createElement('li', {\n          key: i,\n          className: isCurrent ? 'active' : null\n        }, _react2.default.createElement('a', {\n          role: 'button',\n          href: '#',\n          onClick: btnEvent,\n          tabIndex: '0'\n        }, _react2.default.createElement('span', null, i + 1), isCurrent ? _react2.default.createElement('span', {\n          className: 'sr-only'\n        }, '(current)') : null)));\n      } // First and Prev button handlers and class.\n\n\n      var firstHandler = preventDefault;\n      var prevHandler = preventDefault;\n      var isNotFirst = currentPage > 0;\n\n      if (isNotFirst) {\n        firstHandler = this.onChangePage.bind(this, 0);\n        prevHandler = this.onChangePage.bind(this, currentPage - 1);\n      } // Next and Last button handlers and class.\n\n\n      var nextHandler = preventDefault;\n      var lastHandler = preventDefault;\n      var isNotLast = currentPage < totalPages - 1;\n\n      if (isNotLast) {\n        nextHandler = this.onChangePage.bind(this, currentPage + 1);\n        lastHandler = this.onChangePage.bind(this, totalPages - 1);\n      }\n\n      buttons = [_react2.default.createElement('li', {\n        key: 'first',\n        className: !isNotFirst ? 'disabled' : null\n      }, _react2.default.createElement('a', {\n        role: 'button',\n        href: '#',\n        tabIndex: '0',\n        onClick: firstHandler,\n        'aria-disabled': !isNotFirst,\n        'aria-label': 'First'\n      }, _react2.default.createElement('span', {\n        className: 'fa fa-angle-double-left',\n        'aria-hidden': 'true'\n      }))), _react2.default.createElement('li', {\n        key: 'prev',\n        className: !isNotFirst ? 'disabled' : null\n      }, _react2.default.createElement('a', {\n        role: 'button',\n        href: '#',\n        tabIndex: '0',\n        onClick: prevHandler,\n        'aria-disabled': !isNotFirst,\n        'aria-label': 'Previous'\n      }, _react2.default.createElement('span', {\n        className: 'fa fa-angle-left',\n        'aria-hidden': 'true'\n      })))].concat(buttons);\n      buttons = buttons.concat([_react2.default.createElement('li', {\n        key: 'next',\n        className: !isNotLast ? 'disabled' : null\n      }, _react2.default.createElement('a', {\n        role: 'button',\n        href: '#',\n        tabIndex: '0',\n        onClick: nextHandler,\n        'aria-disabled': !isNotLast,\n        'aria-label': 'Next'\n      }, _react2.default.createElement('span', {\n        className: 'fa fa-angle-right',\n        'aria-hidden': 'true'\n      }))), _react2.default.createElement('li', {\n        key: 'last',\n        className: !isNotLast ? 'disabled' : null\n      }, _react2.default.createElement('a', {\n        role: 'button',\n        href: '#',\n        tabIndex: '0',\n        onClick: lastHandler,\n        'aria-disabled': !isNotLast,\n        'aria-label': 'Last'\n      }, _react2.default.createElement('span', {\n        className: 'fa fa-angle-double-right',\n        'aria-hidden': 'true'\n      })))]);\n      return _react2.default.createElement('ul', {\n        className: this.props.className,\n        'aria-label': 'Pagination'\n      }, buttons);\n    }\n  }]);\n\n  return Pagination;\n}(_react.Component);\n\nPagination.defaultProps = {\n  showPages: 5\n};\nPagination.propTypes = {\n  onChangePage: _propTypes2.default.func.isRequired,\n  totalPages: _propTypes2.default.number.isRequired,\n  currentPage: _propTypes2.default.number.isRequired,\n  showPages: _propTypes2.default.number\n};\nexports.default = Pagination;","map":null,"metadata":{},"sourceType":"script"}