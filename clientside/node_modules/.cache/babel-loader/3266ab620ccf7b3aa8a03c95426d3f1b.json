{"ast":null,"code":"var _jsxFileName = \"E:\\\\git project\\\\bErp-invoice\\\\clientside\\\\src\\\\components\\\\generate.jsx\";\nimport React, { Component } from \"react\";\nimport { MDBBtn, MDBCard, MDBCardBody, MDBInput, MDBIcon } from 'mdbreact';\nimport invoice from './devZone-Logo.png';\nimport jsPDF from 'jspdf';\nimport html2canvas from 'html2canvas';\nconst today = new Date();\nconst mydate = today.toDateString();\nconst id = Math.floor(Math.random() * 200000 + 1);\nconst options = [{\n  value: 'seo',\n  label: 'SEO'\n}, {\n  value: 'web development',\n  label: 'WEB DEVELOPMENT'\n}, {\n  value: 'graphic designing',\n  label: 'Graphics Designing'\n}, {\n  value: 'mobile apps',\n  label: 'Mobile Apps'\n}];\nconst option1 = [{\n  value: 'no',\n  label: 'none'\n}, {\n  value: '2',\n  label: '2'\n}, {\n  value: '4',\n  label: '4'\n}, {\n  value: '6',\n  label: '6'\n}];\n\nclass Generate extends Component {\n  constructor(props) {\n    super(props);\n\n    this.cleararray = () => {\n      this.setState({\n        item: []\n      });\n    };\n\n    this.calculateTotal = () => {\n      console.log(\"total is\");\n      let total = 0;\n      this.state.item.forEach(items => {\n        total += Number(items.price);\n        console.log(total);\n      });\n      this.setState({\n        total: total\n      });\n    };\n\n    this.submit = e => {\n      e.preventDefault();\n      let form = this.myForm;\n\n      if (form.checkValidity() === false) {\n        form.classList.add('was-validated');\n      } else {\n        let obj2 = {\n          serial: this.state.labelno,\n          name: this.state.name,\n          address: this.state.address,\n          number: this.state.phone,\n          date: this.state.date,\n          services: this.state.services,\n          items: this.state.items,\n          quantity: this.state.qty,\n          total: this.state.total\n        };\n        console.log(\"form is ready to submit\");\n      }\n    };\n\n    this.state = {\n      date: mydate,\n      labelno: id,\n      name: '',\n      address: '',\n      phone: '',\n      services: '',\n      revisions: '',\n      item: [],\n      qty: '',\n      updateditem: [],\n      total: '',\n      discount: '',\n      clients: [],\n      selectedClient: '',\n      tabrow: ''\n    };\n  }\n\n  /*\r\n  updateRow=(e)=>{\r\n    let updatedItem = {\r\n      description: this.state.description,\r\n      qty: this.state.qty,\r\n      price: this.state.price\r\n  };\r\n    this.setState({item: [...this.state.updateditem,updatedItem]}, function () {\r\n      console.log(this.state.item);\r\n  });\r\n  }*/\n  componentDidMount() {\n    fetch(\"http://localhost:5000/brp/clients\").then(response => {\n      return response.json();\n    }).then(data => {\n      console.log(data);\n      this.setState({\n        clients: data\n      }, () => {\n        console.log(this.state.clients);\n      });\n    }).catch(error => {\n      console.log(error);\n    });\n  }\n\n  printDocument() {\n    const input = document.getElementById('capture');\n    html2canvas(input).then(canvas => {\n      const imgData = canvas.toDataURL('image/png');\n      const pdf = new jsPDF();\n      pdf.addImage(imgData, 'PNG', 3, 12, 205, 190); // pdf.output('dataurlnewwindow');\n\n      pdf.save(\"invoice.pdf\");\n    });\n  }\n\n  render() {\n    let total = this.state.total;\n    return React.createElement(\"div\", {\n      className: \"container-fluid\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: this.submit,\n      ref: ref => this.myForm = ref,\n      noValidate: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"m-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-sm-1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"col-sm-11\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, React.createElement(MDBCard, {\n      id: \"capture\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, React.createElement(MDBCardBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      className: \"text-center\",\n      style: {\n        backgroundColor: \"#9ACD32\",\n        color: \"white\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, \"INVOICE\"), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-sm-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: invoice,\n      width: \"220px\",\n      height: \"auto\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }), \" \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }), React.createElement(MDBInput, {\n      label: \"Creation Date\",\n      value: today,\n      onChange: e => {\n        this.setState({\n          creation: today\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }), React.createElement(MDBInput, {\n      label: \"Invoice-id\",\n      value: id,\n      onChange: e => {\n        this.setState({\n          invoiceid: id\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"col-sm-6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"col-sm-3 pull-right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, React.createElement(MDBCard, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, React.createElement(MDBCardBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }, \"DevZone Solutions\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }), \"Mobile: +92 306 5619198\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }), \"Email:contact@devzone.com.pk\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }), \"Address: 42-5-A2 Township, Lahore, Pakistan\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }))))), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-sm-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }), React.createElement(\"select\", {\n      value: this.state.selectedClient,\n      className: \"browser-default custom-select\",\n      onChange: e => this.setState({\n        selectedClient: e.target.value\n      }),\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }, this.state.clients.map(cl => React.createElement(\"option\", {\n      key: cl.id,\n      value: cl.cl_name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }, cl.cl_name)))), React.createElement(\"div\", {\n      className: \"col-sm-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    }, React.createElement(MDBInput, {\n      label: \"Address\",\n      onChange: e => {\n        this.setState({\n          address: e.target.value\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"col-sm-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    }, React.createElement(MDBInput, {\n      label: \"Phone no\",\n      onChange: e => {\n        this.setState({\n          phone: e.target.value\n        });\n      },\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"container-fluid\",\n      style: {\n        borderStyle: \"groove\",\n        borderRadius: \"10px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      className: \"text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195\n      },\n      __self: this\n    }, \"Select services\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-sm-6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198\n      },\n      __self: this\n    }, \"Services\", React.createElement(\"select\", {\n      className: \"form-control\",\n      onChange: event => {\n        this.setState({\n          services: event.target.value\n        });\n      },\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"seo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203\n      },\n      __self: this\n    }, \"SEO\"), React.createElement(\"option\", {\n      value: \"web development\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204\n      },\n      __self: this\n    }, \"Web Development\"), React.createElement(\"option\", {\n      value: \"mob app\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205\n      },\n      __self: this\n    }, \"MObile App\"), React.createElement(\"option\", {\n      value: \"graphic designing\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206\n      },\n      __self: this\n    }, \"Graphic Designing\"))), React.createElement(\"div\", {\n      className: \"col-sm-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209\n      },\n      __self: this\n    }, \"Revisions\", React.createElement(\"select\", {\n      className: \"form-control\",\n      onChange: event => {\n        this.setState({\n          revisions: event.target.value\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"none\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214\n      },\n      __self: this\n    }, \"none\"), React.createElement(\"option\", {\n      value: \"2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215\n      },\n      __self: this\n    }, \"2\"), React.createElement(\"option\", {\n      value: \"4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216\n      },\n      __self: this\n    }, \"4\"), React.createElement(\"option\", {\n      value: \"6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217\n      },\n      __self: this\n    }, \"6\")))), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-sm-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222\n      },\n      __self: this\n    }, React.createElement(MDBInput, {\n      label: \"Item-descrption\",\n      onChange: e => {\n        this.setState({\n          description: e.target.value\n        });\n      },\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"col-sm-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227\n      },\n      __self: this\n    }, React.createElement(MDBInput, {\n      label: \"Qty\",\n      onChange: e => {\n        this.setState({\n          qty: e.target.value\n        });\n      },\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"col-sm-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232\n      },\n      __self: this\n    }, React.createElement(MDBInput, {\n      label: \"Price\",\n      onChange: e => {\n        this.setState({\n          price: e.target.value\n        });\n      },\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"col-sm-5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: () => {\n        let newitem = {\n          description: this.state.description,\n          qty: this.state.qty,\n          price: this.state.price\n        };\n        this.setState({\n          item: [...this.state.item, newitem]\n        }, function () {\n          console.log(this.state.item);\n        });\n      },\n      color: \"transparent\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238\n      },\n      __self: this\n    }, React.createElement(MDBIcon, {\n      icon: \"plus\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248\n      },\n      __self: this\n    })))), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"col-md-8\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254\n      },\n      __self: this\n    }, React.createElement(\"table\", {\n      className: \"table table-bordered\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258\n      },\n      __self: this\n    }, \"Description\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259\n      },\n      __self: this\n    }, \"qunatity\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260\n      },\n      __self: this\n    }, \"price\"))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263\n      },\n      __self: this\n    }, this.state.item.map((item, index) => {\n      return React.createElement(\"tr\", {\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 266\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        suppressContentEditableWarning: true,\n        contentEditable: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 267\n        },\n        __self: this\n      }, item.description), React.createElement(\"td\", {\n        suppressContentEditableWarning: true,\n        contentEditable: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 269\n        },\n        __self: this\n      }, item.qty), React.createElement(\"td\", {\n        suppressContentEditableWarning: true,\n        contentEditable: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 271\n        },\n        __self: this\n      }, item.price));\n    })))), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-sm-9\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 284\n      },\n      __self: this\n    }, React.createElement(MDBBtn, {\n      color: \"transparent\",\n      onClick: this.calculateTotal,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 284\n      },\n      __self: this\n    }, \"Calculated\"), React.createElement(MDBBtn, {\n      onClick: this.cleararray,\n      color: \"transparent\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 286\n      },\n      __self: this\n    }, React.createElement(MDBIcon, {\n      icon: \"broom\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 286\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"col-sm-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 289\n      },\n      __self: this\n    }, \"RS \", React.createElement(\"textarea\", {\n      onChange: () => {},\n      className: \"form-control\",\n      placeholder: \"Total\",\n      value: total,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 290\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 292\n      },\n      __self: this\n    })))), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 297\n      },\n      __self: this\n    }))), React.createElement(MDBBtn, {\n      onClick: this.printDocument,\n      color: \"info\",\n      className: \"pull-right\",\n      size: \"md\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 302\n      },\n      __self: this\n    }, React.createElement(MDBIcon, {\n      icon: \"file-pdf\",\n      size: \"lg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 303\n      },\n      __self: this\n    }), \" Convert to PDF\"), React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"Save\",\n      className: \"btn btn-primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 304\n      },\n      __self: this\n    }))))));\n  }\n\n}\n\nexport default Generate;","map":{"version":3,"sources":["E:/git project/bErp-invoice/clientside/src/components/generate.jsx"],"names":["React","Component","MDBBtn","MDBCard","MDBCardBody","MDBInput","MDBIcon","invoice","jsPDF","html2canvas","today","Date","mydate","toDateString","id","Math","floor","random","options","value","label","option1","Generate","constructor","props","cleararray","setState","item","calculateTotal","console","log","total","state","forEach","items","Number","price","submit","e","preventDefault","form","myForm","checkValidity","classList","add","obj2","serial","labelno","name","address","number","phone","date","services","quantity","qty","revisions","updateditem","discount","clients","selectedClient","tabrow","componentDidMount","fetch","then","response","json","data","catch","error","printDocument","input","document","getElementById","canvas","imgData","toDataURL","pdf","addImage","save","render","ref","backgroundColor","color","creation","invoiceid","target","map","cl","cl_name","borderStyle","borderRadius","event","description","newitem","index"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,MAAR,EAAgBC,OAAhB,EAAyBC,WAAzB,EAAsCC,QAAtC,EAAgDC,OAAhD,QAA+D,UAA/D;AACA,OAAOC,OAAP,MAAoB,oBAApB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,aAAxB;AAEA,MAAMC,KAAK,GAAG,IAAIC,IAAJ,EAAd;AACA,MAAMC,MAAM,GAAGF,KAAK,CAACG,YAAN,EAAf;AACA,MAAMC,EAAE,GAAGC,IAAI,CAACC,KAAL,CAAYD,IAAI,CAACE,MAAL,KAAgB,MAAjB,GAA2B,CAAtC,CAAX;AACA,MAAMC,OAAO,GAAG,CACZ;AAACC,EAAAA,KAAK,EAAE,KAAR;AAAeC,EAAAA,KAAK,EAAE;AAAtB,CADY,EAEZ;AAACD,EAAAA,KAAK,EAAE,iBAAR;AAA2BC,EAAAA,KAAK,EAAE;AAAlC,CAFY,EAGZ;AAACD,EAAAA,KAAK,EAAE,mBAAR;AAA6BC,EAAAA,KAAK,EAAE;AAApC,CAHY,EAIZ;AAACD,EAAAA,KAAK,EAAE,aAAR;AAAuBC,EAAAA,KAAK,EAAE;AAA9B,CAJY,CAAhB;AAMA,MAAMC,OAAO,GAAG,CACZ;AAACF,EAAAA,KAAK,EAAE,IAAR;AAAcC,EAAAA,KAAK,EAAE;AAArB,CADY,EAEZ;AAACD,EAAAA,KAAK,EAAE,GAAR;AAAaC,EAAAA,KAAK,EAAE;AAApB,CAFY,EAGZ;AAACD,EAAAA,KAAK,EAAE,GAAR;AAAaC,EAAAA,KAAK,EAAE;AAApB,CAHY,EAIZ;AAACD,EAAAA,KAAK,EAAE,GAAR;AAAaC,EAAAA,KAAK,EAAE;AAApB,CAJY,CAAhB;;AASA,MAAME,QAAN,SAAuBrB,SAAvB,CAAiC;AAC7BsB,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAuBnBC,UAvBmB,GAuBN,MAAM;AACf,WAAKC,QAAL,CAAc;AAACC,QAAAA,IAAI,EAAE;AAAP,OAAd;AACH,KAzBkB;;AAAA,SAuEnBC,cAvEmB,GAuEF,MAAM;AACnBC,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACA,UAAIC,KAAK,GAAG,CAAZ;AACA,WAAKC,KAAL,CAAWL,IAAX,CAAgBM,OAAhB,CAAyBC,KAAD,IAAW;AAC3BH,QAAAA,KAAK,IAAII,MAAM,CAACD,KAAK,CAACE,KAAP,CAAf;AACAP,QAAAA,OAAO,CAACC,GAAR,CAAYC,KAAZ;AAEP,OAJD;AAMA,WAAKL,QAAL,CAAc;AAACK,QAAAA,KAAK,EAAEA;AAAR,OAAd;AACH,KAjFkB;;AAAA,SAkFvBM,MAlFuB,GAkFfC,CAAD,IAAM;AACLA,MAAAA,CAAC,CAACC,cAAF;AACA,UAAIC,IAAI,GAAC,KAAKC,MAAd;;AACA,UAAID,IAAI,CAACE,aAAL,OAAwB,KAA5B,EACA;AACIF,QAAAA,IAAI,CAACG,SAAL,CAAeC,GAAf,CAAmB,eAAnB;AACH,OAHD,MAIK;AACD,YAAIC,IAAI,GAAC;AACLC,UAAAA,MAAM,EAAC,KAAKd,KAAL,CAAWe,OADb;AAELC,UAAAA,IAAI,EAAC,KAAKhB,KAAL,CAAWgB,IAFX;AAGLC,UAAAA,OAAO,EAAC,KAAKjB,KAAL,CAAWiB,OAHd;AAILC,UAAAA,MAAM,EAAC,KAAKlB,KAAL,CAAWmB,KAJb;AAKLC,UAAAA,IAAI,EAAC,KAAKpB,KAAL,CAAWoB,IALX;AAMLC,UAAAA,QAAQ,EAAC,KAAKrB,KAAL,CAAWqB,QANf;AAOLnB,UAAAA,KAAK,EAAC,KAAKF,KAAL,CAAWE,KAPZ;AAQLoB,UAAAA,QAAQ,EAAC,KAAKtB,KAAL,CAAWuB,GARf;AASLxB,UAAAA,KAAK,EAAC,KAAKC,KAAL,CAAWD;AATZ,SAAT;AAWAF,QAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ;AACH;AAGR,KAzGsB;;AAEf,SAAKE,KAAL,GAAa;AACToB,MAAAA,IAAI,EAAExC,MADG;AAETmC,MAAAA,OAAO,EAAEjC,EAFA;AAGTkC,MAAAA,IAAI,EAAE,EAHG;AAITC,MAAAA,OAAO,EAAE,EAJA;AAKTE,MAAAA,KAAK,EAAE,EALE;AAMTE,MAAAA,QAAQ,EAAE,EAND;AAOTG,MAAAA,SAAS,EAAE,EAPF;AAQT7B,MAAAA,IAAI,EAAE,EARG;AAST4B,MAAAA,GAAG,EAAC,EATK;AAUTE,MAAAA,WAAW,EAAE,EAVJ;AAWT1B,MAAAA,KAAK,EAAE,EAXE;AAYT2B,MAAAA,QAAQ,EAAE,EAZD;AAaTC,MAAAA,OAAO,EAAE,EAbA;AAcTC,MAAAA,cAAc,EAAE,EAdP;AAeTC,MAAAA,MAAM,EAAE;AAfC,KAAb;AAmBH;;AAMD;;;;;;;;;;;AAcAC,EAAAA,iBAAiB,GAAG;AAChBC,IAAAA,KAAK,CAAC,mCAAD,CAAL,CACKC,IADL,CACWC,QAAD,IAAc;AAChB,aAAOA,QAAQ,CAACC,IAAT,EAAP;AACH,KAHL,EAIKF,IAJL,CAIUG,IAAI,IAAI;AACVtC,MAAAA,OAAO,CAACC,GAAR,CAAYqC,IAAZ;AAEA,WAAKzC,QAAL,CAAc;AAACiC,QAAAA,OAAO,EAAEQ;AAAV,OAAd,EAA+B,MAAM;AACjCtC,QAAAA,OAAO,CAACC,GAAR,CAAY,KAAKE,KAAL,CAAW2B,OAAvB;AACH,OAFD;AAGH,KAVL,EAUOS,KAVP,CAUaC,KAAK,IAAI;AAClBxC,MAAAA,OAAO,CAACC,GAAR,CAAYuC,KAAZ;AACH,KAZD;AAaH;;AAEDC,EAAAA,aAAa,GAAG;AACZ,UAAMC,KAAK,GAAGC,QAAQ,CAACC,cAAT,CAAwB,SAAxB,CAAd;AACAhE,IAAAA,WAAW,CAAC8D,KAAD,CAAX,CACKP,IADL,CACWU,MAAD,IAAY;AACd,YAAMC,OAAO,GAAGD,MAAM,CAACE,SAAP,CAAiB,WAAjB,CAAhB;AACA,YAAMC,GAAG,GAAG,IAAIrE,KAAJ,EAAZ;AACAqE,MAAAA,GAAG,CAACC,QAAJ,CAAaH,OAAb,EAAsB,KAAtB,EAA6B,CAA7B,EAAgC,EAAhC,EAAoC,GAApC,EAAyC,GAAzC,EAHc,CAId;;AACAE,MAAAA,GAAG,CAACE,IAAJ,CAAS,aAAT;AACH,KAPL;AASH;;AAuCDC,EAAAA,MAAM,GAAG;AAAA,QACAjD,KADA,GACS,KAAKC,KADd,CACAD,KADA;AAGL,WACI;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAM,MAAA,QAAQ,EAAE,KAAKM,MAArB;AAA6B,MAAA,GAAG,EAAE4C,GAAG,IAAI,KAAKxC,MAAL,GAAawC,GAAtD;AAA2D,MAAA,UAAU,MAArE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,OAAD;AAAS,MAAA,EAAE,EAAC,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAI,MAAA,SAAS,EAAC,aAAd;AACI,MAAA,KAAK,EAAE;AAACC,QAAAA,eAAe,EAAE,SAAlB;AAA6BC,QAAAA,KAAK,EAAE;AAApC,OADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,EAGI;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,GAAG,EAAE5E,OAAV;AAAmB,MAAA,KAAK,EAAC,OAAzB;AAAiC,MAAA,MAAM,EAAC,MAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,OACqD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADrD,EAEI,oBAAC,QAAD;AAAU,MAAA,KAAK,EAAC,eAAhB;AAAgC,MAAA,KAAK,EAAEG,KAAvC;AAA8C,MAAA,QAAQ,EAAE4B,CAAC,IAAI;AACzD,aAAKZ,QAAL,CAAc;AAAC0D,UAAAA,QAAQ,EAAE1E;AAAX,SAAd;AACH,OAFD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,EAKI,oBAAC,QAAD;AAAU,MAAA,KAAK,EAAC,YAAhB;AAA6B,MAAA,KAAK,EAAEI,EAApC;AAAwC,MAAA,QAAQ,EAAEwB,CAAC,IAAI;AACnD,aAAKZ,QAAL,CAAc;AAAC2D,UAAAA,SAAS,EAAEvE;AAAZ,SAAd;AACH,OAFD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALJ,CADJ,EAUI;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAVJ,EAWI;AAAK,MAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADJ,EAGa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHb,6BAI2B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJ3B,kCAKgC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALhC,iDAM+C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAN/C,CADJ,CADJ,CAXJ,CAHJ,EA4BI;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI;AAAQ,MAAA,KAAK,EAAE,KAAKkB,KAAL,CAAW4B,cAA1B;AACQ,MAAA,SAAS,EAAC,+BADlB;AAEQ,MAAA,QAAQ,EAAGtB,CAAD,IAAO,KAAKZ,QAAL,CAAc;AAACkC,QAAAA,cAAc,EAAEtB,CAAC,CAACgD,MAAF,CAASnE;AAA1B,OAAd,CAFzB;AAE0E,MAAA,QAAQ,MAFlF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAGK,KAAKa,KAAL,CAAW2B,OAAX,CAAmB4B,GAAnB,CAAwBC,EAAD,IAAQ;AAAQ,MAAA,GAAG,EAAEA,EAAE,CAAC1E,EAAhB;AACQ,MAAA,KAAK,EAAE0E,EAAE,CAACC,OADlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAC4BD,EAAE,CAACC,OAD/B,CAA/B,CAHL,CAFJ,CADJ,EAUI;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,QAAD;AAAU,MAAA,KAAK,EAAC,SAAhB;AAA0B,MAAA,QAAQ,EAAEnD,CAAC,IAAI;AACrC,aAAKZ,QAAL,CAAc;AAACuB,UAAAA,OAAO,EAAEX,CAAC,CAACgD,MAAF,CAASnE;AAAnB,SAAd;AACH,OAFD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CAVJ,EAeI;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,QAAD;AAAU,MAAA,KAAK,EAAC,UAAhB;AAA2B,MAAA,QAAQ,EAAEmB,CAAC,IAAI;AACtC,aAAKZ,QAAL,CAAc;AAACyB,UAAAA,KAAK,EAAEb,CAAC,CAACgD,MAAF,CAASnE;AAAjB,SAAd;AACH,OAFD;AAEG,MAAA,QAAQ,MAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CAfJ,CA5BJ,EAiDI;AAAK,MAAA,SAAS,EAAC,iBAAf;AACK,MAAA,KAAK,EAAE;AAACuE,QAAAA,WAAW,EAAE,QAAd;AAAwBC,QAAAA,YAAY,EAAE;AAAtC,OADZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEI;AAAQ,MAAA,SAAS,EAAC,aAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ,EAII;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAEI;AAAQ,MAAA,SAAS,EAAC,cAAlB;AAAiC,MAAA,QAAQ,EAAEC,KAAK,IAAI;AAChD,aAAKlE,QAAL,CAAc;AAAC2B,UAAAA,QAAQ,EAAEuC,KAAK,CAACN,MAAN,CAAanE;AAAxB,SAAd;AACH,OAFD;AAEG,MAAA,QAAQ,MAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAGI;AAAQ,MAAA,KAAK,EAAC,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAHJ,EAII;AAAQ,MAAA,KAAK,EAAC,iBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAJJ,EAKI;AAAQ,MAAA,KAAK,EAAC,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBALJ,EAMI;AAAQ,MAAA,KAAK,EAAC,mBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BANJ,CAFJ,CADJ,EAYI;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEI;AAAQ,MAAA,SAAS,EAAC,cAAlB;AAAiC,MAAA,QAAQ,EAAEyE,KAAK,IAAI;AAChD,aAAKlE,QAAL,CAAc;AAAC8B,UAAAA,SAAS,EAAEoC,KAAK,CAACN,MAAN,CAAanE;AAAzB,SAAd;AACH,OAFD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAGI;AAAQ,MAAA,KAAK,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ,EAII;AAAQ,MAAA,KAAK,EAAC,GAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAJJ,EAKI;AAAQ,MAAA,KAAK,EAAC,GAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WALJ,EAMI;AAAQ,MAAA,KAAK,EAAC,GAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WANJ,CAFJ,CAZJ,CAJJ,EA4BI;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,QAAD;AAAU,MAAA,KAAK,EAAC,iBAAhB;AAAkC,MAAA,QAAQ,EAAEmB,CAAC,IAAI;AAC7C,aAAKZ,QAAL,CAAc;AAACmE,UAAAA,WAAW,EAAEvD,CAAC,CAACgD,MAAF,CAASnE;AAAvB,SAAd;AACH,OAFD;AAEG,MAAA,QAAQ,MAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ,EAMI;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,QAAD;AAAU,MAAA,KAAK,EAAC,KAAhB;AAAsB,MAAA,QAAQ,EAAEmB,CAAC,IAAI;AACjC,aAAKZ,QAAL,CAAc;AAAC6B,UAAAA,GAAG,EAAEjB,CAAC,CAACgD,MAAF,CAASnE;AAAf,SAAd;AACH,OAFD;AAEG,MAAA,QAAQ,MAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CANJ,EAWI;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,QAAD;AAAU,MAAA,KAAK,EAAC,OAAhB;AAAwB,MAAA,QAAQ,EAAEmB,CAAC,IAAI;AACnC,aAAKZ,QAAL,CAAc;AAACU,UAAAA,KAAK,EAAEE,CAAC,CAACgD,MAAF,CAASnE;AAAjB,SAAd;AACH,OAFD;AAEG,MAAA,QAAQ,MAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CAXJ,EAgBI;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAQ,MAAA,OAAO,EAAE,MAAM;AACnB,YAAI2E,OAAO,GAAG;AACVD,UAAAA,WAAW,EAAE,KAAK7D,KAAL,CAAW6D,WADd;AAEVtC,UAAAA,GAAG,EAAE,KAAKvB,KAAL,CAAWuB,GAFN;AAGVnB,UAAAA,KAAK,EAAE,KAAKJ,KAAL,CAAWI;AAHR,SAAd;AAKA,aAAKV,QAAL,CAAc;AAACC,UAAAA,IAAI,EAAE,CAAC,GAAG,KAAKK,KAAL,CAAWL,IAAf,EAAqBmE,OAArB;AAAP,SAAd,EAAqD,YAAY;AAC7DjE,UAAAA,OAAO,CAACC,GAAR,CAAY,KAAKE,KAAL,CAAWL,IAAvB;AACH,SAFD;AAIH,OAVD;AAUG,MAAA,KAAK,EAAC,aAVT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAUuB,oBAAC,OAAD;AAAS,MAAA,IAAI,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAVvB,CADJ,CAhBJ,CA5BJ,EA0DI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA1DJ,EA6DI;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAO,MAAA,SAAS,EAAC,sBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAHJ,CADA,CADJ,EAQI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC,KAAKK,KAAL,CAAWL,IAAX,CAAgB4D,GAAhB,CAAoB,CAAC5D,IAAD,EAAOoE,KAAP,KAAiB;AAClC,aACI;AAAI,QAAA,GAAG,EAAEA,KAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAI,QAAA,8BAA8B,EAAE,IAApC;AACI,QAAA,eAAe,EAAE,IADrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAC4BpE,IAAI,CAACkE,WADjC,CADJ,EAGI;AAAI,QAAA,8BAA8B,EAAE,IAApC;AACI,QAAA,eAAe,EAAE,IADrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAC4BlE,IAAI,CAAC4B,GADjC,CAHJ,EAKI;AAAI,QAAA,8BAA8B,EAAE,IAApC;AACI,QAAA,eAAe,EAAE,IADrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAC4B5B,IAAI,CAACS,KADjC,CALJ,CADJ;AAYH,KAbA,CADD,CARJ,CADJ,CA7DJ,EA0FI;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA0B,oBAAC,MAAD;AAAQ,MAAA,KAAK,EAAC,aAAd;AACQ,MAAA,OAAO,EAAE,KAAKR,cADtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAA1B,EAEI,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAE,KAAKH,UAAtB;AAAkC,MAAA,KAAK,EAAC,aAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAsD,oBAAC,OAAD;AAClD,MAAA,IAAI,EAAC,OAD6C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAtD,CAFJ,CADJ,EAMI;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cACO;AAAU,MAAA,QAAQ,EAAE,MAAM,CAChC,CADM;AACJ,MAAA,SAAS,EAAC,cADN;AACqB,MAAA,WAAW,EAAC,OADjC;AACyC,MAAA,KAAK,EAAEM,KADhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADP,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ,CANJ,CA1FJ,CAjDJ,EAyJI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAzJJ,CADJ,CADJ,EAgKI,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAE,KAAKuC,aAAtB;AAAqC,MAAA,KAAK,EAAC,MAA3C;AAAkD,MAAA,SAAS,EAAC,YAA5D;AACQ,MAAA,IAAI,EAAC,IADb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACkB,oBAAC,OAAD;AAAS,MAAA,IAAI,EAAC,UAAd;AAAyB,MAAA,IAAI,EAAC,IAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADlB,oBAhKJ,EAkKI;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAqB,MAAA,KAAK,EAAC,MAA3B;AACO,MAAA,SAAS,EAAC,iBADjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAlKJ,CAFJ,CADJ,CADA,CADJ,CADJ;AAiLH;;AAhS4B;;AAmSjC,eAAehD,QAAf","sourcesContent":["import React, {Component} from \"react\";\r\nimport {MDBBtn, MDBCard, MDBCardBody, MDBInput, MDBIcon,} from 'mdbreact';\r\nimport invoice from './devZone-Logo.png';\r\nimport jsPDF from 'jspdf';\r\nimport html2canvas from 'html2canvas';\r\n\r\nconst today = new Date();\r\nconst mydate = today.toDateString();\r\nconst id = Math.floor((Math.random() * 200000) + 1);\r\nconst options = [\r\n    {value: 'seo', label: 'SEO'},\r\n    {value: 'web development', label: 'WEB DEVELOPMENT'},\r\n    {value: 'graphic designing', label: 'Graphics Designing'},\r\n    {value: 'mobile apps', label: 'Mobile Apps'}\r\n];\r\nconst option1 = [\r\n    {value: 'no', label: 'none'},\r\n    {value: '2', label: '2'},\r\n    {value: '4', label: '4'},\r\n    {value: '6', label: '6'},\r\n\r\n];\r\n\r\n\r\nclass Generate extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            date: mydate,\r\n            labelno: id,\r\n            name: '',\r\n            address: '',\r\n            phone: '',\r\n            services: '',\r\n            revisions: '',\r\n            item: [],\r\n            qty:'',\r\n            updateditem: [],\r\n            total: '',\r\n            discount: '',\r\n            clients: [],\r\n            selectedClient: '',\r\n            tabrow: ''\r\n\r\n\r\n        }\r\n    }\r\n\r\n    cleararray = () => {\r\n        this.setState({item: []});\r\n    }\r\n\r\n    /*\r\nupdateRow=(e)=>{\r\n\r\n    let updatedItem = {\r\n        description: this.state.description,\r\n        qty: this.state.qty,\r\n        price: this.state.price\r\n    };\r\n\r\n    this.setState({item: [...this.state.updateditem,updatedItem]}, function () {\r\n        console.log(this.state.item);\r\n    });\r\n\r\n}*/\r\n    componentDidMount() {\r\n        fetch(\"http://localhost:5000/brp/clients\")\r\n            .then((response) => {\r\n                return response.json();\r\n            })\r\n            .then(data => {\r\n                console.log(data);\r\n\r\n                this.setState({clients: data}, () => {\r\n                    console.log(this.state.clients)\r\n                });\r\n            }).catch(error => {\r\n            console.log(error);\r\n        });\r\n    }\r\n\r\n    printDocument() {\r\n        const input = document.getElementById('capture');\r\n        html2canvas(input)\r\n            .then((canvas) => {\r\n                const imgData = canvas.toDataURL('image/png');\r\n                const pdf = new jsPDF();\r\n                pdf.addImage(imgData, 'PNG', 3, 12, 205, 190);\r\n                // pdf.output('dataurlnewwindow');\r\n                pdf.save(\"invoice.pdf\");\r\n            })\r\n        ;\r\n    }\r\n\r\n\r\n    calculateTotal = () => {\r\n        console.log(\"total is\");\r\n        let total = 0;\r\n        this.state.item.forEach((items) => {\r\n                total += Number(items.price);\r\n                console.log(total);\r\n\r\n        })\r\n\r\n        this.setState({total: total})\r\n    }\r\nsubmit=(e) =>{\r\n        e.preventDefault();\r\n        let form=this.myForm;\r\n        if (form.checkValidity()=== false)\r\n        {\r\n            form.classList.add('was-validated');\r\n        }\r\n        else {\r\n            let obj2={\r\n                serial:this.state.labelno,\r\n                name:this.state.name,\r\n                address:this.state.address,\r\n                number:this.state.phone,\r\n                date:this.state.date,\r\n                services:this.state.services,\r\n                items:this.state.items,\r\n                quantity:this.state.qty,\r\n                total:this.state.total\r\n            };\r\n            console.log(\"form is ready to submit\");\r\n        }\r\n\r\n\r\n}\r\n\r\n    render() {\r\n        let {total} = this.state;\r\n\r\n        return (\r\n            <div className=\"container-fluid\">\r\n                <form onSubmit={this.submit} ref={ref => this.myForm =ref} noValidate>\r\n                <div className=\"m-4\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-sm-1\"></div>\r\n                        <div className=\"col-sm-11\">\r\n                            <MDBCard id=\"capture\">\r\n                                <MDBCardBody>\r\n                                    <h2 className=\"text-center\"\r\n                                        style={{backgroundColor: \"#9ACD32\", color: \"white\"}}>INVOICE</h2>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-sm-3\">\r\n                                            <img src={invoice} width=\"220px\" height=\"auto\"/> <br/>\r\n                                            <MDBInput label=\"Creation Date\" value={today} onChange={e => {\r\n                                                this.setState({creation: today})\r\n                                            }}/>\r\n                                            <MDBInput label=\"Invoice-id\" value={id} onChange={e => {\r\n                                                this.setState({invoiceid: id})\r\n                                            }}/>\r\n                                        </div>\r\n                                        <div className=\"col-sm-6\"></div>\r\n                                        <div className=\"col-sm-3 pull-right\">\r\n                                            <MDBCard>\r\n                                                <MDBCardBody>\r\n                                                    <strong>\r\n                                                        DevZone Solutions\r\n                                                    </strong><br/>\r\n                                                    Mobile: +92 306 5619198<br/>\r\n                                                    Email:contact@devzone.com.pk<br/>\r\n                                                    Address: 42-5-A2 Township, Lahore, Pakistan<br/>\r\n                                                </MDBCardBody>\r\n                                            </MDBCard>\r\n\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-sm-4\">\r\n                                            <br/>\r\n                                            <select value={this.state.selectedClient}\r\n                                                    className=\"browser-default custom-select\"\r\n                                                    onChange={(e) => this.setState({selectedClient: e.target.value})} required>\r\n                                                {this.state.clients.map((cl) => <option key={cl.id}\r\n                                                                                        value={cl.cl_name}>{cl.cl_name}</option>)}\r\n                                            </select>\r\n                                        </div>\r\n                                        <div className=\"col-sm-4\">\r\n                                            <MDBInput label=\"Address\" onChange={e => {\r\n                                                this.setState({address: e.target.value})\r\n                                            }}/>\r\n                                        </div>\r\n                                        <div className=\"col-sm-4\">\r\n                                            <MDBInput label=\"Phone no\" onChange={e => {\r\n                                                this.setState({phone: e.target.value})\r\n                                            }} required />\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"container-fluid\"\r\n                                         style={{borderStyle: \"groove\", borderRadius: \"10px\"}}>\r\n                                        <strong className=\"text-center\">Select services</strong>\r\n                                        <p></p>\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-sm-6\">\r\n                                                Services\r\n                                                <select className=\"form-control\" onChange={event => {\r\n                                                    this.setState({services: event.target.value})\r\n                                                }} required>\r\n                                                    <option value=\"seo\">SEO</option>\r\n                                                    <option value=\"web development\">Web Development</option>\r\n                                                    <option value=\"mob app\">MObile App</option>\r\n                                                    <option value=\"graphic designing\">Graphic Designing</option>\r\n                                                </select>\r\n                                            </div>\r\n                                            <div className=\"col-sm-3\">\r\n                                                Revisions\r\n                                                <select className=\"form-control\" onChange={event => {\r\n                                                    this.setState({revisions: event.target.value})\r\n                                                }} >\r\n                                                    <option value=\"none\">none</option>\r\n                                                    <option value=\"2\">2</option>\r\n                                                    <option value=\"4\">4</option>\r\n                                                    <option value=\"6\">6</option>\r\n                                                </select>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-sm-4\">\r\n                                                <MDBInput label=\"Item-descrption\" onChange={e => {\r\n                                                    this.setState({description: e.target.value})\r\n                                                }} required />\r\n                                            </div>\r\n                                            <div className=\"col-sm-2\">\r\n                                                <MDBInput label=\"Qty\" onChange={e => {\r\n                                                    this.setState({qty: e.target.value})\r\n                                                }} required />\r\n                                            </div>\r\n                                            <div className=\"col-sm-3\">\r\n                                                <MDBInput label=\"Price\" onChange={e => {\r\n                                                    this.setState({price: e.target.value})\r\n                                                }} required/>\r\n                                            </div>\r\n                                            <div className=\"col-sm-5\">\r\n                                                <button onClick={() => {\r\n                                                    let newitem = {\r\n                                                        description: this.state.description,\r\n                                                        qty: this.state.qty,\r\n                                                        price: this.state.price\r\n                                                    };\r\n                                                    this.setState({item: [...this.state.item, newitem]}, function () {\r\n                                                        console.log(this.state.item);\r\n                                                    });\r\n\r\n                                                }} color=\"transparent\"><MDBIcon icon=\"plus\"/></button>\r\n                                            </div>\r\n                                        </div>\r\n                                        <br/>\r\n\r\n\r\n                                        <div className=\"col-md-8\">\r\n                                            <table className=\"table table-bordered\">\r\n                                                <thead>\r\n                                                <tr>\r\n                                                    <th>Description</th>\r\n                                                    <th>qunatity</th>\r\n                                                    <th>price</th>\r\n                                                </tr>\r\n                                                </thead>\r\n                                                <tbody>\r\n                                                {this.state.item.map((item, index) => {\r\n                                                    return (\r\n                                                        <tr key={index}>\r\n                                                            <td suppressContentEditableWarning={true}\r\n                                                                contentEditable={true}>{item.description}</td>\r\n                                                            <td suppressContentEditableWarning={true}\r\n                                                                contentEditable={true}>{item.qty}</td>\r\n                                                            <td suppressContentEditableWarning={true}\r\n                                                                contentEditable={true}>{item.price}</td>\r\n\r\n                                                        </tr>\r\n\r\n                                                    )\r\n                                                })}\r\n                                                </tbody>\r\n\r\n                                            </table>\r\n                                        </div>\r\n\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-sm-9\"><MDBBtn color=\"transparent\"\r\n                                                                              onClick={this.calculateTotal}>Calculated</MDBBtn>\r\n                                                <MDBBtn onClick={this.cleararray} color=\"transparent\"><MDBIcon\r\n                                                    icon=\"broom\"/></MDBBtn>\r\n                                            </div>\r\n                                            <div className=\"col-sm-2\">\r\n                                                RS <textarea onChange={() => {\r\n                                            }} className=\"form-control\" placeholder=\"Total\" value={total}/>\r\n                                                <p></p>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                    </div>\r\n                                    <p></p>\r\n\r\n                                </MDBCardBody>\r\n                            </MDBCard>\r\n\r\n                            <MDBBtn onClick={this.printDocument} color=\"info\" className=\"pull-right\"\r\n                                    size=\"md\"><MDBIcon icon=\"file-pdf\" size=\"lg\"/> Convert to PDF</MDBBtn>\r\n                            <input type=\"submit\" value=\"Save\"\r\n                                   className=\"btn btn-primary\"/>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                </form>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default Generate;"]},"metadata":{},"sourceType":"module"}