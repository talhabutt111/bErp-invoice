{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nexports.dataReducer = dataReducer;\nexports.default = tableReducer;\n\nvar _utils = require('./utils');\n\nvar _actions = require('./actions');\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nvar initialState = {\n  initialized: false,\n  initialData: [],\n  data: [],\n  page: [],\n  filterValues: {\n    globalSearch: ''\n  },\n  totalPages: 0,\n  sortBy: null,\n  pageNumber: 0,\n  pageSize: 5\n};\n\nfunction calculatePage(data, pageSize, pageNumber) {\n  if (pageSize === 0 || !data.length) {\n    return {\n      page: data,\n      totalPages: 0\n    };\n  }\n\n  var start = pageSize * pageNumber;\n  return {\n    page: data.slice(start, start + pageSize),\n    totalPages: Math.ceil(data.length / pageSize)\n  };\n}\n\nfunction pageNumberChange(state, _ref) {\n  var pageNumber = _ref.payload;\n  return _extends({}, state, calculatePage(state.data, state.pageSize, pageNumber), {\n    pageNumber: pageNumber\n  });\n}\n\nfunction pageSizeChange(state, action) {\n  var newPageSize = Number(action.payload);\n  var pageNumber = state.pageNumber,\n      pageSize = state.pageSize;\n  var newPageNumber = newPageSize ? Math.floor(pageNumber * pageSize / newPageSize) : 0;\n  return _extends({}, state, calculatePage(state.data, newPageSize, newPageNumber), {\n    pageSize: newPageSize,\n    pageNumber: newPageNumber\n  });\n}\n\nfunction dataSort(state, _ref2) {\n  var sortBy = _ref2.payload;\n  var data = (0, _utils.sort)(sortBy, state.data);\n  return _extends({}, state, calculatePage(data, state.pageSize, state.pageNumber), {\n    sortBy: sortBy,\n    data: data\n  });\n}\n\nfunction dataFilter(state, _ref3) {\n  var _ref3$payload = _ref3.payload,\n      key = _ref3$payload.key,\n      value = _ref3$payload.value,\n      filters = _ref3$payload.filters;\n\n  var newFilterValues = _extends({}, state.filterValues, _defineProperty({}, key, value));\n\n  var data = (0, _utils.filter)(filters, newFilterValues, state.initialData);\n\n  if (state.sortBy) {\n    data = (0, _utils.sort)(state.sortBy, data);\n  }\n\n  return _extends({}, state, calculatePage(data, state.pageSize, 0), {\n    data: data,\n    filterValues: newFilterValues,\n    pageNumber: 0\n  });\n}\n\nfunction dataInit(state, action) {\n  var payload = action.payload;\n  return _extends({}, state, {\n    initialized: true,\n    initialData: payload,\n    data: payload\n  });\n}\n\nfunction dataLoaded(state, _ref4) {\n  var data = _ref4.payload; // Filled missing properties.\n\n  var filledState = _extends({}, initialState, state);\n\n  var pageSize = filledState.pageSize,\n      pageNumber = filledState.pageNumber;\n\n  if (state.sortBy) {\n    data = (0, _utils.sort)(state.sortBy, data);\n  }\n\n  return _extends({}, filledState, calculatePage(data, pageSize, pageNumber), {\n    initialData: data,\n    data: data\n  });\n}\n\nfunction dataReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments[1];\n\n  switch (action.type) {\n    case _actions.ActionTypes.INITIALIZE:\n      return dataInit(state, action);\n\n    case _actions.ActionTypes.DATA_LOADED:\n      return dataLoaded(state, action);\n\n    case _actions.ActionTypes.PAGE_NUMBER_CHANGE:\n      return pageNumberChange(state, action);\n\n    case _actions.ActionTypes.PAGE_SIZE_CHANGE:\n      return pageSizeChange(state, action);\n\n    case _actions.ActionTypes.DATA_FILTER:\n      return dataFilter(state, action);\n\n    case _actions.ActionTypes.DATA_SORT:\n      return dataSort(state, action);\n  }\n\n  return state;\n}\n\nfunction tableReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var action = arguments[1];\n\n  switch (action.type) {\n    case _actions.ActionTypes.INITIALIZE:\n    case _actions.ActionTypes.DATA_LOADED:\n    case _actions.ActionTypes.PAGE_NUMBER_CHANGE:\n    case _actions.ActionTypes.PAGE_SIZE_CHANGE:\n    case _actions.ActionTypes.DATA_FILTER:\n    case _actions.ActionTypes.DATA_SORT:\n      {\n        var table = action.meta.table;\n        return _extends({}, state, _defineProperty({}, table, dataReducer(state[table], action)));\n      }\n  }\n\n  return state;\n}","map":null,"metadata":{},"sourceType":"script"}