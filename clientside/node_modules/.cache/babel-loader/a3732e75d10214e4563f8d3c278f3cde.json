{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MUZAMAL-PC\\\\Desktop\\\\Talha related\\\\bErp-invoice\\\\clientside\\\\src\\\\components\\\\Generate.jsx\";\nimport React, { Component } from \"react\";\nimport { MDBBtn, MDBCard, MDBCardBody, MDBInput, MDBIcon } from 'mdbreact';\nimport invoice from './images/devZone-Logo.png';\nimport jsPDF from 'jspdf';\nimport html2canvas from 'html2canvas';\nimport axios from 'axios'; // const today = new Date();\n// const mydate = today.toDateString();\n// const id = Math.floor((Math.random() * 200000) + 1);\n\nconst servicesOptions = [{\n  value: 'seo',\n  label: 'SEO'\n}, {\n  value: 'web development',\n  label: 'WEB DEVELOPMENT'\n}, {\n  value: 'graphic designing',\n  label: 'Graphics Designing'\n}, {\n  value: 'mobile apps',\n  label: 'Mobile Apps'\n}];\n\nclass Generate extends Component {\n  constructor(props) {\n    super(props);\n\n    this.cleararray = () => {\n      this.setState({\n        item: []\n      });\n    };\n\n    this.makeStateEmpty = () => {\n      this.setState({\n        invoice_id: Math.floor(Math.random() * 200000 + 1),\n        selectedClient: '',\n        address: '',\n        phone: '',\n        total: 0,\n        item: [],\n        services: '',\n        description: '',\n        qty: '',\n        price: '',\n        message: ''\n      });\n    };\n\n    this.printInvoice = () => {\n      if (this.state.printInvoice) {\n        const input = document.getElementById('capture');\n        html2canvas(input).then(canvas => {\n          const imgData = canvas.toDataURL('image/png');\n          const pdf = new jsPDF();\n          pdf.addImage(imgData, 'PNG', 3, 12, 207, 100);\n          pdf.save(\"invoice.pdf\");\n        });\n      }\n    };\n\n    this.submitInvoice = () => {\n      let _this$state = this.state,\n          item = _this$state.item,\n          total = _this$state.total; // e.preventDefault();\n\n      let form = this.selectClientForm;\n\n      if (form.checkValidity() === false) {\n        form.classList.add('was-validated');\n      } else if (item.length === 0) {\n        this.setState({\n          message: 'No Invoice Data !'\n        });\n        return;\n      } else if (total === 0) {\n        this.setState({\n          message: 'Please calculate first !'\n        });\n        return;\n      } else {\n        let _this$state2 = this.state,\n            invoice_id = _this$state2.invoice_id,\n            selectedClient = _this$state2.selectedClient,\n            address = _this$state2.address,\n            phone = _this$state2.phone,\n            date = _this$state2.date,\n            total = _this$state2.total;\n        const obj = {\n          slagme: invoice_id,\n          name: selectedClient,\n          address: address,\n          number: phone,\n          date: date,\n          total_amount: total\n        };\n\n        if (!this.editingInvoiceId) {\n          axios.post('http://localhost:5000/brp/invoice', obj).then(res => {\n            if (!res.data.error) {\n              this.setState({\n                message: res.data.message\n              }); // console.log(res.data);\n\n              axios.post('http://localhost:5000/brp/itemsdata', item).then(res => {\n                // console.log(res)\n                if (res) this.makeStateEmpty();\n                this.selectClientForm.classList.remove('was-validated');\n                this.printInvoice();\n              }).catch(error => console.log(error));\n            }\n          }).catch(err => {\n            console.log(err);\n          });\n        } else {\n          axios.put(\"http://localhost:5000/brp/updateinvoice/\".concat(this.editingInvoiceId), obj).then(res => {\n            if (!res.data.error) {\n              this.setState({\n                message: res.data.message\n              });\n              axios.delete(\"http://localhost:5000/brp/deleteitemsdata/\".concat(invoice_id)).then(res => {}).catch(err => console.log(err));\n            }\n          }).catch(err => console.log(err));\n        }\n      }\n\n      ; // print = () => {\n      //     if (!this.state.total) {\n      //         this.setState({ message: 'Please calculate total first then take print !' })\n      //         return\n      //     }\n      //     else {\n      //         const input = document.getElementById('capture');\n      //         html2canvas(input)\n      //             .then((canvas) => {\n      //                 const imgData = canvas.toDataURL('image/png');\n      //                 const pdf = new jsPDF();\n      //                 pdf.addImage(imgData, 'PNG', 5, 12, 207, 100);\n      //                 pdf.save(\"invoice.pdf\");\n      //             });\n      //     }\n      // };\n    };\n\n    this.componentDidMount = () => {\n      fetch(\"http://localhost:5000/brp/clients\").then(response => {\n        return response.json();\n      }).then(data => {\n        // console.log(data);\n        this.setState({\n          clients: data\n        }, () => {});\n      }).catch(error => {\n        console.log(error);\n      });\n\n      if (this.editingInvoiceId) {\n        axios.get('http://localhost:5000/brp/invoices/' + this.props.id).then(response => {\n          // console.log(response);\n          if (!response.data.error) {\n            var editingInvoice = response.data.invoice.shift();\n          }\n\n          editingInvoice && axios.get('http://localhost:5000/brp/oneitemdata/' + editingInvoice.slagme).then(response => {\n            // console.log(response);\n            let item = [];\n\n            if (response.data.length !== 0) {\n              response.data.forEach(data => {\n                item.push({\n                  invoice_id: data.invoice_id,\n                  services: data.services,\n                  detail: data.detail,\n                  qty: data.qty,\n                  price: data.price\n                });\n              });\n              this.setState({\n                item\n              });\n              editingInvoice && this.setState({\n                date: new Date(editingInvoice.date).toDateString(),\n                invoice_id: editingInvoice.slagme,\n                selectedClient: editingInvoice.c_name,\n                address: editingInvoice.c_address,\n                phone: editingInvoice.c_number,\n                total: editingInvoice.total_amount\n              });\n            }\n          }).catch(err => console.log(err));\n        }) // .then(() => { console.log(this.state.name, this.state.address) })\n        .catch(function (error) {\n          console.log(error);\n        });\n      }\n    };\n\n    this.alertmessage = () => {\n      if (this.state.message !== null) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 212\n          },\n          __self: this\n        }, React.createElement(\"strong\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 213\n          },\n          __self: this\n        }, this.state.message));\n      } else {\n        console.log('message error');\n      }\n    };\n\n    this.calculateTotal = () => {\n      let table = document.getElementById('invoiceTable'),\n          total = 0;\n\n      for (let index = 1; index < table.rows.length; index++) {\n        total += Number(table.rows[index].cells[3].innerHTML);\n      }\n\n      this.setState({\n        total: total\n      });\n    };\n\n    this.onChangeClient = e => {\n      let ourClient = this.state.clients.filter(client => client.id == e.target.value).shift();\n      ourClient ? this.setState({\n        selectedClient: ourClient.id,\n        address: ourClient.address,\n        phone: ourClient.number\n      }) : this.setState({\n        selectedClient: '',\n        address: '',\n        phone: ''\n      });\n    };\n\n    this.onChange = name => e => {\n      this.setState({\n        [name]: e.target.value\n      });\n    };\n\n    this.addItem = e => {\n      e.preventDefault();\n\n      if (this.addItemForm.checkValidity() === false) {\n        this.addItemForm.classList.add('was-validated');\n        return;\n      } else {\n        let _this$state3 = this.state,\n            invoice_id = _this$state3.invoice_id,\n            description = _this$state3.description,\n            qty = _this$state3.qty,\n            price = _this$state3.price,\n            services = _this$state3.services;\n        let newitem = {\n          invoice_id: invoice_id,\n          services: services,\n          detail: description,\n          qty: qty,\n          price: price\n        };\n        this.setState({\n          item: [...this.state.item, newitem],\n          description: '',\n          qty: '',\n          price: '',\n          services: ''\n        }, function () {\n          this.addItemForm.classList.remove('was-validated');\n        });\n      }\n    };\n\n    this.tdOnBlur = (index, name) => e => {\n      let el = e.target;\n      this.setState({\n        item: [...this.state.item.slice(0, index), Object.assign({}, this.state.item[index], {\n          [name]: el.innerHTML\n        }), ...this.state.item.slice(index + 1)]\n      });\n    };\n\n    this.deleteItemData = Index => e => {\n      let el = e.target,\n          rowIndex = el.closest('tr').rowIndex;\n      this.setState(prevState => ({\n        item: prevState.item.filter((itemData, index) => {\n          return index !== Index;\n        })\n      }));\n    };\n\n    this.editingInvoiceId = this.props.id;\n    this.state = {\n      date: new Date().toDateString(),\n      invoice_id: Math.floor(Math.random() * 200000 + 1),\n      address: '',\n      phone: '',\n      total: 0,\n      selectedClient: '',\n      // item: [{ services: 'seo', detail: 'ggd', qty: '3', price: '4' }],\n      item: [],\n      services: '',\n      discount: '',\n      clients: [],\n      message: '',\n      description: '',\n      qty: '',\n      price: '',\n      printInvoice: true\n    };\n  }\n\n  render() {\n    // console.log('re-render');\n    let _this$state4 = this.state,\n        total = _this$state4.total,\n        description = _this$state4.description,\n        qty = _this$state4.qty,\n        price = _this$state4.price,\n        date = _this$state4.date,\n        invoice_id = _this$state4.invoice_id,\n        selectedClient = _this$state4.selectedClient,\n        clients = _this$state4.clients,\n        phone = _this$state4.phone,\n        address = _this$state4.address,\n        printInvoice = _this$state4.printInvoice;\n    let companyDetailStyle = {\n      fontSize: '0.8rem'\n    };\n    let clientOptions = clients && clients.map(cl => React.createElement(\"option\", {\n      key: cl.id,\n      value: cl.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 304\n      },\n      __self: this\n    }, cl.cl_name));\n    let tableRows = [];\n    this.state.item.map((item, index) => {\n      tableRows.push(React.createElement(\"tr\", {\n        key: index,\n        className: \"text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 308\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 309\n        },\n        __self: this\n      }, item.services), React.createElement(\"td\", {\n        onBlur: this.tdOnBlur(index, 'detail'),\n        suppressContentEditableWarning: true,\n        contentEditable: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 312\n        },\n        __self: this\n      }, item.detail), React.createElement(\"td\", {\n        onBlur: this.tdOnBlur(index, 'qty'),\n        suppressContentEditableWarning: true,\n        contentEditable: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 319\n        },\n        __self: this\n      }, item.qty), React.createElement(\"td\", {\n        onBlur: this.tdOnBlur(index, 'price'),\n        suppressContentEditableWarning: true,\n        contentEditable: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 326\n        },\n        __self: this\n      }, item.price), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 333\n        },\n        __self: this\n      }, React.createElement(MDBBtn, {\n        size: \"sm\",\n        color: \"transparent\",\n        onClick: this.deleteItemData(index),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 334\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fas fa-trash\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 335\n        },\n        __self: this\n      })))));\n    });\n    return React.createElement(\"div\", {\n      className: \"container-fluid\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 344\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row m-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 345\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-sm-11 offset-sm-1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 346\n      },\n      __self: this\n    }, React.createElement(MDBCard, {\n      id: \"capture\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 347\n      },\n      __self: this\n    }, React.createElement(MDBCardBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 348\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      className: \"text-center\",\n      style: {\n        backgroundColor: \"#9ACD32\",\n        color: \"white\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 349\n      },\n      __self: this\n    }, \"INVOICE\"), React.createElement(\"div\", {\n      className: \"row m-0 p-0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 351\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-sm-3 align-self-center m-0 p-0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 352\n      },\n      __self: this\n    }, React.createElement(MDBInput, {\n      label: \"Date\",\n      disabled: true,\n      value: date,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 353\n      },\n      __self: this\n    }), React.createElement(MDBInput, {\n      label: \"Id\",\n      disabled: true,\n      value: invoice_id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 354\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"col-sm-6 align-self-center m-0 p-0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 356\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: invoice,\n      width: \"100%\",\n      height: \"auto\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 357\n      },\n      __self: this\n    }), \" \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 357\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"col-md-3 m-0 p-0 align-self-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 359\n      },\n      __self: this\n    }, React.createElement(MDBCard, {\n      className: \"m-0 p-0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 360\n      },\n      __self: this\n    }, React.createElement(MDBCardBody, {\n      className: \"m-0 py-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 361\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 362\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-2 text-center  m-0 p-0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 363\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"fa fa-mobile-alt\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 364\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"col-10 m-0 p-0 text-left\",\n      style: companyDetailStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 366\n      },\n      __self: this\n    }, \"+92 306 5619198\")), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 371\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-2 text-center  m-0 py-0 pr-0 pl-0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 372\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"fa fa-envelope\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 373\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"col-10 m-0 p-0 text-left\",\n      style: companyDetailStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 375\n      },\n      __self: this\n    }, \"contact@devzone.com.pk\")), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 380\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-2 text-center  m-0 p-0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 381\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"fa fa-map-marker-alt\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 382\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"col-10 m-0 p-0 text-left\",\n      style: companyDetailStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 384\n      },\n      __self: this\n    }, \"42-5-A2 Township, Lahore, Pakistan\")))))), this.alertmessage(), React.createElement(\"form\", {\n      ref: el => this.selectClientForm = el,\n      noValidate: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 394\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 395\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-sm-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 396\n      },\n      __self: this\n    }, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 397\n      },\n      __self: this\n    }), React.createElement(\"select\", {\n      value: selectedClient // defaultValue={'Select Client/..'}\n      ,\n      className: \"browser-default custom-select mt-1\" // placeholder={'Select Client'}\n      ,\n      onChange: this.onChangeClient,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 398\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      key: Math.random(),\n      value: \"\",\n      disabled: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 406\n      },\n      __self: this\n    }, \"Select Client...\"), clientOptions)), React.createElement(\"div\", {\n      className: \"col-sm-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 410\n      },\n      __self: this\n    }, React.createElement(MDBInput, {\n      label: \"Address\",\n      value: address,\n      disabled: true,\n      required: true,\n      validate: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 411\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"col-sm-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 419\n      },\n      __self: this\n    }, React.createElement(MDBInput, {\n      label: \"Phone\",\n      value: phone,\n      disabled: true,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 420\n      },\n      __self: this\n    })))), React.createElement(\"div\", {\n      className: \"container-fluid m-0 p-0\",\n      style: {\n        borderStyle: \"groove\",\n        borderRadius: \"10px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 428\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: this.addItem,\n      className: \" p-0\",\n      ref: ref => this.addItemForm = ref,\n      noValidate: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 430\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row px-2 m-0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 432\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-md-4 m-0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 433\n      },\n      __self: this\n    }, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 434\n      },\n      __self: this\n    }), React.createElement(\"select\", {\n      className: \"form-control mt-1\",\n      onChange: this.onChange('services'),\n      required: true,\n      value: this.state.services,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 435\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"\",\n      disabled: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 441\n      },\n      __self: this\n    }, \"Select Services...\"), React.createElement(\"option\", {\n      value: \"seo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 442\n      },\n      __self: this\n    }, \"SEO\"), React.createElement(\"option\", {\n      value: \"web development\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 443\n      },\n      __self: this\n    }, \"Web Development\"), React.createElement(\"option\", {\n      value: \"mob app\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 444\n      },\n      __self: this\n    }, \"Mobile App\"), React.createElement(\"option\", {\n      value: \"graphic designing\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 445\n      },\n      __self: this\n    }, \"Graphic Designing\"))), React.createElement(\"div\", {\n      className: \"col-md-4 m-0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 448\n      },\n      __self: this\n    }, React.createElement(MDBInput, {\n      label: \"Item-descrption\",\n      value: description,\n      type: \"text\",\n      onChange: this.onChange('description'),\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 449\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"col-md-1 m-0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 457\n      },\n      __self: this\n    }, React.createElement(MDBInput, {\n      label: \"Qty\",\n      value: qty,\n      type: \"number\",\n      min: \"1\",\n      onChange: this.onChange('qty'),\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 458\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"col-md-2 m-0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 467\n      },\n      __self: this\n    }, React.createElement(MDBInput, {\n      label: \"Price\",\n      value: price,\n      type: \"number\",\n      min: \"1\",\n      onChange: this.onChange('price'),\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 468\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"col-md-1 m-0 pt-2  align-self-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 477\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"submit\",\n      color: \"transparent\",\n      className: \"mb-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 478\n      },\n      __self: this\n    }, React.createElement(MDBIcon, {\n      icon: \"plus\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 483\n      },\n      __self: this\n    }))))), React.createElement(\"div\", {\n      className: \"row px-2 m-0\",\n      style: {\n        display: this.state.item.length === 0 ? 'none' : ''\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 488\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-md-8 m-0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 490\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"m-0 p-0 table-responsive\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 491\n      },\n      __self: this\n    }, React.createElement(\"table\", {\n      id: \"invoiceTable\",\n      className: \"table table-bordered table-hover table-sm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 492\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      className: \"thead-light text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 494\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 495\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 496\n      },\n      __self: this\n    }, \"Services\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 497\n      },\n      __self: this\n    }, \"Description\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 498\n      },\n      __self: this\n    }, \"Qty.\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 499\n      },\n      __self: this\n    }, \"Price\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 500\n      },\n      __self: this\n    }, \"Action\"))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 503\n      },\n      __self: this\n    }, tableRows))))), React.createElement(\"div\", {\n      className: \"row px-2 m-0\",\n      style: {\n        display: this.state.item.length === 0 ? 'none' : ''\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 511\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-sm-8 align-self-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 513\n      },\n      __self: this\n    }, React.createElement(MDBBtn, {\n      color: \"transparent\",\n      onClick: this.calculateTotal,\n      className: \"m-0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 514\n      },\n      __self: this\n    }, \"Calculate\"), React.createElement(MDBBtn, {\n      onClick: this.cleararray,\n      color: \"transparent\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 521\n      },\n      __self: this\n    }, React.createElement(MDBIcon, {\n      icon: \"broom\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 525\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"col-sm-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 528\n      },\n      __self: this\n    }, React.createElement(MDBInput, {\n      label: \"Total\",\n      outline: true,\n      value: total,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 529\n      },\n      __self: this\n    })))), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 533\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"row m-0 px-2 justify-content-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 537\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"btn btn-sm btn-blue-grey\",\n      onClick: this.print,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 550\n      },\n      __self: this\n    }, React.createElement(MDBIcon, {\n      icon: \"file-pdf\",\n      size: \"lg\",\n      className: \"mr-1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 550\n      },\n      __self: this\n    }), \" \", React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 551\n      },\n      __self: this\n    }, \"convert to pdf\")), React.createElement(\"div\", {\n      className: \"col-md-3 p-0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 555\n      },\n      __self: this\n    }, React.createElement(MDBBtn, {\n      color: \"success\",\n      onClick: this.submitInvoice,\n      size: \"md\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 556\n      },\n      __self: this\n    }, React.createElement(MDBIcon, {\n      icon: \"save\",\n      size: \"lg\",\n      className: \"mr-1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 561\n      },\n      __self: this\n    }), \"Save Record\"))))));\n  }\n\n}\n\nexport default Generate;","map":{"version":3,"sources":["C:/Users/MUZAMAL-PC/Desktop/Talha related/bErp-invoice/clientside/src/components/Generate.jsx"],"names":["React","Component","MDBBtn","MDBCard","MDBCardBody","MDBInput","MDBIcon","invoice","jsPDF","html2canvas","axios","servicesOptions","value","label","Generate","constructor","props","cleararray","setState","item","makeStateEmpty","invoice_id","Math","floor","random","selectedClient","address","phone","total","services","description","qty","price","message","printInvoice","state","input","document","getElementById","then","canvas","imgData","toDataURL","pdf","addImage","save","submitInvoice","form","selectClientForm","checkValidity","classList","add","length","date","obj","slagme","name","number","total_amount","editingInvoiceId","post","res","data","error","remove","catch","console","log","err","put","delete","componentDidMount","fetch","response","json","clients","get","id","editingInvoice","shift","forEach","push","detail","Date","toDateString","c_name","c_address","c_number","alertmessage","calculateTotal","table","index","rows","Number","cells","innerHTML","onChangeClient","e","ourClient","filter","client","target","onChange","addItem","preventDefault","addItemForm","newitem","tdOnBlur","el","slice","Object","assign","deleteItemData","Index","rowIndex","closest","prevState","itemData","discount","render","companyDetailStyle","fontSize","clientOptions","map","cl","cl_name","tableRows","backgroundColor","color","borderStyle","borderRadius","ref","display","print"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { MDBBtn, MDBCard, MDBCardBody, MDBInput, MDBIcon, } from 'mdbreact';\r\nimport invoice from './images/devZone-Logo.png';\r\nimport jsPDF from 'jspdf';\r\nimport html2canvas from 'html2canvas';\r\nimport axios from 'axios';\r\n// const today = new Date();\r\n// const mydate = today.toDateString();\r\n// const id = Math.floor((Math.random() * 200000) + 1);\r\nconst servicesOptions = [\r\n    { value: 'seo', label: 'SEO' },\r\n    { value: 'web development', label: 'WEB DEVELOPMENT' },\r\n    { value: 'graphic designing', label: 'Graphics Designing' },\r\n    { value: 'mobile apps', label: 'Mobile Apps' }\r\n];\r\n\r\n\r\nclass Generate extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.editingInvoiceId = this.props.id\r\n        this.state = {\r\n            date: new Date().toDateString(),\r\n            invoice_id: Math.floor((Math.random() * 200000) + 1),\r\n            address: '',\r\n            phone: '',\r\n            total: 0,\r\n            selectedClient: '',\r\n            // item: [{ services: 'seo', detail: 'ggd', qty: '3', price: '4' }],\r\n            item: [],\r\n            services: '',\r\n            discount: '',\r\n            clients: [],\r\n            message: '',\r\n            description: '',\r\n            qty: '',\r\n            price: '',\r\n            printInvoice: true\r\n        }\r\n    }\r\n\r\n    cleararray = () => {\r\n        this.setState({ item: [] });\r\n    }\r\n\r\n    makeStateEmpty = () => {\r\n        this.setState({\r\n            invoice_id: Math.floor((Math.random() * 200000) + 1),\r\n            selectedClient: '',\r\n            address: '',\r\n            phone: '',\r\n            total: 0,\r\n            item: [],\r\n            services: '',\r\n            description: '',\r\n            qty: '',\r\n            price: '',\r\n            message: '',\r\n        })\r\n    }\r\n\r\n    printInvoice = () => {\r\n        if (this.state.printInvoice) {\r\n            const input = document.getElementById('capture');\r\n            html2canvas(input)\r\n                .then((canvas) => {\r\n                    const imgData = canvas.toDataURL('image/png');\r\n                    const pdf = new jsPDF();\r\n                    pdf.addImage(imgData, 'PNG', 3, 12, 207, 100);\r\n                    pdf.save(\"invoice.pdf\");\r\n                });\r\n        }\r\n    }\r\n\r\n    submitInvoice = () => {\r\n        let { item, total } = this.state\r\n        // e.preventDefault();\r\n        let form = this.selectClientForm;\r\n        if (form.checkValidity() === false) {\r\n            form.classList.add('was-validated');\r\n        } else if (item.length === 0) {\r\n            this.setState({ message: 'No Invoice Data !' })\r\n            return\r\n        } else if (total === 0) {\r\n            this.setState({ message: 'Please calculate first !' })\r\n            return\r\n        } else {\r\n            let { invoice_id, selectedClient, address, phone, date, total } = this.state\r\n            const obj = {\r\n                slagme: invoice_id,\r\n                name: selectedClient,\r\n                address: address,\r\n                number: phone,\r\n                date: date,\r\n                total_amount: total,\r\n            };\r\n            if (!this.editingInvoiceId) {\r\n                axios.post('http://localhost:5000/brp/invoice', obj)\r\n                    .then(res => {\r\n                        if (!res.data.error) {\r\n                            this.setState({ message: res.data.message });\r\n                            // console.log(res.data);\r\n                            axios.post('http://localhost:5000/brp/itemsdata', item)\r\n                                .then(res => {\r\n                                    // console.log(res)\r\n                                    if(res)\r\n                                    this.makeStateEmpty()\r\n                                    this.selectClientForm.classList.remove('was-validated')\r\n                                    this.printInvoice()\r\n                                })\r\n                                .catch(error => console.log(error))\r\n                        }\r\n                    })\r\n                    .catch(err => {\r\n                        console.log(err)\r\n                    });\r\n            }\r\n            else {\r\n                axios.put(`http://localhost:5000/brp/updateinvoice/${this.editingInvoiceId}`, obj)\r\n                    .then((res) => {\r\n                        if (!res.data.error) {\r\n                            this.setState({ message: res.data.message });\r\n                            axios.delete(`http://localhost:5000/brp/deleteitemsdata/${invoice_id}`)\r\n                                .then((res) => {\r\n\r\n                                })\r\n                                .catch(err => console.log(err))\r\n                        }\r\n                    })\r\n                    .catch(err => console.log(err))\r\n            }\r\n        };\r\n\r\n        // print = () => {\r\n        //     if (!this.state.total) {\r\n        //         this.setState({ message: 'Please calculate total first then take print !' })\r\n        //         return\r\n        //     }\r\n        //     else {\r\n        //         const input = document.getElementById('capture');\r\n        //         html2canvas(input)\r\n        //             .then((canvas) => {\r\n        //                 const imgData = canvas.toDataURL('image/png');\r\n        //                 const pdf = new jsPDF();\r\n        //                 pdf.addImage(imgData, 'PNG', 5, 12, 207, 100);\r\n        //                 pdf.save(\"invoice.pdf\");\r\n        //             });\r\n        //     }\r\n        // };\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        fetch(\"http://localhost:5000/brp/clients\")\r\n            .then((response) => {\r\n                return response.json();\r\n            })\r\n            .then(data => {\r\n                // console.log(data);\r\n                this.setState({ clients: data }, () => {\r\n\r\n                });\r\n            }).catch(error => {\r\n                console.log(error);\r\n            });\r\n\r\n        if (this.editingInvoiceId) {\r\n            axios.get('http://localhost:5000/brp/invoices/' + this.props.id)\r\n                .then(response => {\r\n                    // console.log(response);\r\n                    if (!response.data.error) {\r\n                        var editingInvoice = response.data.invoice.shift()\r\n                    }\r\n                    editingInvoice && axios.get('http://localhost:5000/brp/oneitemdata/' + editingInvoice.slagme)\r\n                        .then(response => {\r\n                            // console.log(response);\r\n                            let item = []\r\n                            if (response.data.length !== 0) {\r\n                                response.data.forEach(data => {\r\n                                    item.push(\r\n                                        {\r\n                                            invoice_id: data.invoice_id,\r\n                                            services: data.services,\r\n                                            detail: data.detail,\r\n                                            qty: data.qty,\r\n                                            price: data.price\r\n                                        }\r\n                                    )\r\n                                })\r\n                                this.setState({ item })\r\n                                editingInvoice && this.setState({\r\n                                    date: new Date(editingInvoice.date).toDateString(),\r\n                                    invoice_id: editingInvoice.slagme,\r\n                                    selectedClient: editingInvoice.c_name,\r\n                                    address: editingInvoice.c_address,\r\n                                    phone: editingInvoice.c_number,\r\n                                    total: editingInvoice.total_amount,\r\n                                });\r\n                            }\r\n                        })\r\n                        .catch(err => console.log(err))\r\n                })\r\n                // .then(() => { console.log(this.state.name, this.state.address) })\r\n                .catch(function (error) {\r\n                    console.log(error);\r\n                })\r\n        }\r\n    }\r\n\r\n    alertmessage = () => {\r\n        if (this.state.message !== null) {\r\n            return (\r\n                <div>\r\n                    <strong>{this.state.message}</strong>\r\n                </div>\r\n            )\r\n        } else {\r\n            console.log('message error');\r\n        }\r\n    }\r\n\r\n    calculateTotal = () => {\r\n        let table = document.getElementById('invoiceTable'),\r\n            total = 0;\r\n        for (let index = 1; index < table.rows.length; index++) {\r\n            total += Number(table.rows[index].cells[3].innerHTML)\r\n        }\r\n        this.setState({ total: total })\r\n    };\r\n\r\n    onChangeClient = (e) => {\r\n        let ourClient = this.state.clients.filter(client => client.id == e.target.value).shift()\r\n        ourClient ?\r\n            this.setState({\r\n                selectedClient: ourClient.id,\r\n                address: ourClient.address,\r\n                phone: ourClient.number\r\n            })\r\n            :\r\n            this.setState({\r\n                selectedClient: '',\r\n                address: '',\r\n                phone: ''\r\n            })\r\n    }\r\n\r\n    onChange = name => e => {\r\n        this.setState({\r\n            [name]: e.target.value\r\n        })\r\n    }\r\n\r\n    addItem = (e) => {\r\n        e.preventDefault()\r\n        if (this.addItemForm.checkValidity() === false) {\r\n            this.addItemForm.classList.add('was-validated')\r\n            return\r\n        } else {\r\n            let { invoice_id, description, qty, price, services } = this.state\r\n            let newitem = {\r\n                invoice_id: invoice_id,\r\n                services: services,\r\n                detail: description,\r\n                qty: qty,\r\n                price: price\r\n            };\r\n            this.setState({\r\n                item: [...this.state.item, newitem],\r\n                description: '',\r\n                qty: '',\r\n                price: '',\r\n                services: ''\r\n            }, function () {\r\n                this.addItemForm.classList.remove('was-validated')\r\n            });\r\n        }\r\n    }\r\n\r\n    tdOnBlur = (index, name) => (e) => {\r\n        let el = e.target\r\n        this.setState({\r\n            item: [\r\n                ...this.state.item.slice(0, index),\r\n                Object.assign({}, this.state.item[index], { [name]: el.innerHTML }),\r\n                ...this.state.item.slice(index + 1)\r\n            ]\r\n        });\r\n    }\r\n\r\n    deleteItemData = Index => (e) => {\r\n        let el = e.target, rowIndex = el.closest('tr').rowIndex\r\n        this.setState(prevState => ({\r\n            item: prevState.item.filter((itemData, index) => {\r\n                return index !== Index\r\n            })\r\n        }))\r\n    }\r\n\r\n\r\n    render() {\r\n        // console.log('re-render');\r\n\r\n        let { total, description, qty, price, date, invoice_id, selectedClient, clients, phone, address, printInvoice } = this.state;\r\n        let companyDetailStyle = { fontSize: '0.8rem' };\r\n        let clientOptions = clients && clients.map((cl) => <option key={cl.id} value={cl.id}>{cl.cl_name}</option>)\r\n        let tableRows = [];\r\n        this.state.item.map((item, index) => {\r\n            tableRows.push(\r\n                <tr key={index} className='text-center'>\r\n                    <td>\r\n                        {item.services}\r\n                    </td>\r\n                    <td\r\n                        onBlur={this.tdOnBlur(index, 'detail')}\r\n                        suppressContentEditableWarning={true}\r\n                        contentEditable={true}\r\n                    >\r\n                        {item.detail}\r\n                    </td>\r\n                    <td\r\n                        onBlur={this.tdOnBlur(index, 'qty')}\r\n                        suppressContentEditableWarning={true}\r\n                        contentEditable={true}\r\n                    >\r\n                        {item.qty}\r\n                    </td>\r\n                    <td\r\n                        onBlur={this.tdOnBlur(index, 'price')}\r\n                        suppressContentEditableWarning={true}\r\n                        contentEditable={true}\r\n                    >\r\n                        {item.price}\r\n                    </td>\r\n                    <td>\r\n                        <MDBBtn size=\"sm\" color=\"transparent\" onClick={this.deleteItemData(index)}>\r\n                            <i className=\"fas fa-trash\" />\r\n                        </MDBBtn>\r\n                    </td>\r\n                </tr>\r\n            )\r\n        })\r\n\r\n\r\n        return (\r\n            <div className=\"container-fluid\">\r\n                <div className=\"row m-4\">\r\n                    <div className=\"col-sm-11 offset-sm-1\">\r\n                        <MDBCard id=\"capture\">\r\n                            <MDBCardBody>\r\n                                <h2 className=\"text-center\"\r\n                                    style={{ backgroundColor: \"#9ACD32\", color: \"white\" }}>INVOICE</h2>\r\n                                <div className=\"row m-0 p-0\">\r\n                                    <div className=\"col-sm-3 align-self-center m-0 p-0\">\r\n                                        <MDBInput label=\"Date\" disabled value={date} />\r\n                                        <MDBInput label=\"Id\" disabled value={invoice_id} />\r\n                                    </div>\r\n                                    <div className=\"col-sm-6 align-self-center m-0 p-0\">\r\n                                        <img src={invoice} width=\"100%\" height=\"auto\" /> <br />\r\n                                    </div>\r\n                                    <div className=\"col-md-3 m-0 p-0 align-self-center\">\r\n                                        <MDBCard className='m-0 p-0'>\r\n                                            <MDBCardBody className='m-0 py-2'>\r\n                                                <div className='row'>\r\n                                                    <div className='col-2 text-center  m-0 p-0'>\r\n                                                        <i className='fa fa-mobile-alt' />\r\n                                                    </div>\r\n                                                    <div className='col-10 m-0 p-0 text-left'\r\n                                                        style={companyDetailStyle}>\r\n                                                        +92 306 5619198\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className='row'>\r\n                                                    <div className='col-2 text-center  m-0 py-0 pr-0 pl-0'>\r\n                                                        <i className='fa fa-envelope' />\r\n                                                    </div>\r\n                                                    <div className='col-10 m-0 p-0 text-left'\r\n                                                        style={companyDetailStyle}>\r\n                                                        contact@devzone.com.pk\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className='row'>\r\n                                                    <div className='col-2 text-center  m-0 p-0'>\r\n                                                        <i className='fa fa-map-marker-alt' />\r\n                                                    </div>\r\n                                                    <div className='col-10 m-0 p-0 text-left'\r\n                                                        style={companyDetailStyle}>\r\n                                                        42-5-A2 Township, Lahore, Pakistan\r\n                                                    </div>\r\n                                                </div>\r\n                                            </MDBCardBody>\r\n                                        </MDBCard>\r\n                                    </div>\r\n                                </div>\r\n                                {this.alertmessage()}\r\n                                <form ref={el => this.selectClientForm = el} noValidate>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-sm-4\">\r\n                                            <br />\r\n                                            <select\r\n                                                value={selectedClient}\r\n                                                // defaultValue={'Select Client/..'}\r\n                                                className=\"browser-default custom-select mt-1\"\r\n                                                // placeholder={'Select Client'}\r\n                                                onChange={this.onChangeClient}\r\n                                                required\r\n                                            >\r\n                                                <option key={Math.random()} value='' disabled>Select Client...</option>\r\n                                                {clientOptions}\r\n                                            </select>\r\n                                        </div>\r\n                                        <div className=\"col-sm-4\">\r\n                                            <MDBInput\r\n                                                label=\"Address\"\r\n                                                value={address}\r\n                                                disabled\r\n                                                required\r\n                                                validate\r\n                                            />\r\n                                        </div>\r\n                                        <div className=\"col-sm-4\">\r\n                                            <MDBInput\r\n                                                label=\"Phone\"\r\n                                                value={phone}\r\n                                                disabled\r\n                                                required />\r\n                                        </div>\r\n                                    </div>\r\n                                </form>\r\n                                <div className=\"container-fluid m-0 p-0\"\r\n                                    style={{ borderStyle: \"groove\", borderRadius: \"10px\" }}>\r\n                                    <form onSubmit={this.addItem} className=' p-0' ref={ref => this.addItemForm = ref}\r\n                                        noValidate>\r\n                                        <div className=\"row px-2 m-0\">\r\n                                            <div className=\"col-md-4 m-0\">\r\n                                                <br />\r\n                                                <select\r\n                                                    className=\"form-control mt-1\"\r\n                                                    onChange={this.onChange('services')}\r\n                                                    required\r\n                                                    value={this.state.services}\r\n                                                >\r\n                                                    <option value='' disabled>Select Services...</option>\r\n                                                    <option value=\"seo\">SEO</option>\r\n                                                    <option value=\"web development\">Web Development</option>\r\n                                                    <option value=\"mob app\">Mobile App</option>\r\n                                                    <option value=\"graphic designing\">Graphic Designing</option>\r\n                                                </select>\r\n                                            </div>\r\n                                            <div className=\"col-md-4 m-0\">\r\n                                                <MDBInput\r\n                                                    label=\"Item-descrption\"\r\n                                                    value={description}\r\n                                                    type=\"text\"\r\n                                                    onChange={this.onChange('description')}\r\n                                                    required\r\n                                                />\r\n                                            </div>\r\n                                            <div className=\"col-md-1 m-0\">\r\n                                                <MDBInput\r\n                                                    label=\"Qty\"\r\n                                                    value={qty}\r\n                                                    type=\"number\"\r\n                                                    min=\"1\"\r\n                                                    onChange={this.onChange('qty')}\r\n                                                    required\r\n                                                />\r\n                                            </div>\r\n                                            <div className=\"col-md-2 m-0\">\r\n                                                <MDBInput\r\n                                                    label=\"Price\"\r\n                                                    value={price}\r\n                                                    type=\"number\"\r\n                                                    min=\"1\"\r\n                                                    onChange={this.onChange('price')}\r\n                                                    required\r\n                                                />\r\n                                            </div>\r\n                                            <div className=\"col-md-1 m-0 pt-2  align-self-center\">\r\n                                                <button\r\n                                                    type='submit'\r\n                                                    color=\"transparent\"\r\n                                                    className='mb-2'\r\n                                                >\r\n                                                    <MDBIcon icon=\"plus\" />\r\n                                                </button>\r\n                                            </div>\r\n                                        </div>\r\n                                    </form>\r\n                                    <div className=\"row px-2 m-0\"\r\n                                        style={{ display: this.state.item.length === 0 ? 'none' : '' }}>\r\n                                        <div className=\"col-md-8 m-0\">\r\n                                            <div className='m-0 p-0 table-responsive'>\r\n                                                <table id='invoiceTable'\r\n                                                    className=\"table table-bordered table-hover table-sm\">\r\n                                                    <thead className='thead-light text-center'>\r\n                                                        <tr>\r\n                                                            <th>Services</th>\r\n                                                            <th>Description</th>\r\n                                                            <th>Qty.</th>\r\n                                                            <th>Price</th>\r\n                                                            <th>Action</th>\r\n                                                        </tr>\r\n                                                    </thead>\r\n                                                    <tbody>\r\n                                                        {tableRows}\r\n                                                    </tbody>\r\n                                                </table>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"row px-2 m-0\"\r\n                                        style={{ display: this.state.item.length === 0 ? 'none' : '' }}>\r\n                                        <div className=\"col-sm-8 align-self-center\">\r\n                                            <MDBBtn\r\n                                                color=\"transparent\"\r\n                                                onClick={this.calculateTotal}\r\n                                                className='m-0'\r\n                                            >\r\n                                                Calculate\r\n                                            </MDBBtn>\r\n                                            <MDBBtn\r\n                                                onClick={this.cleararray}\r\n                                                color=\"transparent\"\r\n                                            >\r\n                                                <MDBIcon icon=\"broom\" />\r\n                                            </MDBBtn>\r\n                                        </div>\r\n                                        <div className='col-sm-4'>\r\n                                            <MDBInput label='Total' outline value={total} />\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <p></p>\r\n\r\n                            </MDBCardBody>\r\n                        </MDBCard>\r\n                        <div className=\"row m-0 px-2 justify-content-center\">\r\n                            {/*<div className=\"col-md-2 text-right P-0\">*/}\r\n                            {/*    <input*/}\r\n                            {/*        type=\"checkbox\"*/}\r\n                            {/*        checked={printInvoice}*/}\r\n                            {/*        onChange={() => {*/}\r\n                            {/*            this.setState({*/}\r\n                            {/*                printInvoice: !this.state.printInvoice*/}\r\n                            {/*            })*/}\r\n                            {/*        }}*/}\r\n                            {/*        className='mt-2 mr-0 w-75 h-75'*/}\r\n                            {/*    />*/}\r\n                            {/*</div>*/}\r\n                            <button className=\"btn btn-sm btn-blue-grey\" onClick={this.print}><MDBIcon icon=\"file-pdf\" size=\"lg\"\r\n                                className='mr-1' /> <strong>convert to pdf</strong></button>\r\n                            {/*<div className='col-md-2 align-self-center'>*/}\r\n                            {/*    Save PDF ?*/}\r\n                            {/*</div>*/}\r\n                            <div className=\"col-md-3 p-0\">\r\n                                <MDBBtn\r\n                                    color=\"success\"\r\n                                    onClick={this.submitInvoice}\r\n                                    size=\"md\"\r\n                                >\r\n                                    <MDBIcon\r\n                                        icon=\"save\"\r\n                                        size=\"lg\"\r\n                                        className='mr-1'\r\n                                    />\r\n                                    Save Record\r\n                                </MDBBtn>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default Generate;"]},"metadata":{},"sourceType":"module"}