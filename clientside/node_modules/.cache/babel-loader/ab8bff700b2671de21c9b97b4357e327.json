{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MUZAMAL-PC\\\\Desktop\\\\Talha related\\\\bErp-invoice\\\\clientside\\\\src\\\\components\\\\generate.jsx\";\nimport React, { Component } from \"react\";\nimport { MDBBtn, MDBCard, MDBCardBody, MDBInput, MDBIcon } from 'mdbreact';\nimport invoice from './devZone-Logo.png';\nimport jsPDF from 'jspdf';\nimport html2canvas from 'html2canvas';\nimport axios from 'axios'; // const today = new Date();\n// const mydate = today.toDateString();\n// const id = Math.floor((Math.random() * 200000) + 1);\n\nconst servicesOptions = [{\n  value: 'seo',\n  label: 'SEO'\n}, {\n  value: 'web development',\n  label: 'WEB DEVELOPMENT'\n}, {\n  value: 'graphic designing',\n  label: 'Graphics Designing'\n}, {\n  value: 'mobile apps',\n  label: 'Mobile Apps'\n}]; // const revisionsOptions = [\n//     { value: 'no', label: 'none' },\n//     { value: '2', label: '2' },\n//     { value: '4', label: '4' },\n//     { value: '6', label: '6' },\n// ];\n\nclass Generate extends Component {\n  constructor(props) {\n    super(props);\n\n    this.cleararray = () => {\n      this.setState({\n        item: []\n      });\n    };\n\n    this.submit = e => {\n      e.preventDefault();\n      let form = this.generateInvoice;\n\n      if (form.checkValidity() === false) {\n        form.classList.add('was-validated');\n      } else {\n        let _this$state = this.state,\n            invoice_id = _this$state.invoice_id,\n            selectedClient = _this$state.selectedClient,\n            address = _this$state.address,\n            phone = _this$state.phone,\n            date = _this$state.date,\n            services = _this$state.services,\n            total = _this$state.total,\n            item = _this$state.item;\n        const obj = {\n          slagme: invoice_id,\n          name: selectedClient,\n          address: address,\n          number: phone,\n          date: date,\n          services: services,\n          total_amount: total\n        }; // console.log(obj)\n\n        axios.post('http://localhost:5000/brp/invoice', obj).then(res => {\n          this.setState({\n            message: res.data.message\n          });\n          console.log(res.data); // this.setState({description:this.state.item[0].description},() =>{\n          //                     //     console.log(this.state.description)})\n          //                     // console.log(this.state.item)\n        }).catch(err => {\n          console.log(err);\n        });\n        const Object3 = item;\n        console.log(Object3);\n        axios.post('http://localhost:5000/brp/itemsdata', Object3).then(res => {\n          console.log(res);\n        }).catch(error => console.log(error));\n        window.location.reload(3);\n      }\n    };\n\n    this.componentDidMount = () => {\n      fetch(\"http://localhost:5000/brp/clients\").then(response => {\n        return response.json();\n      }).then(data => {\n        // console.log(data);\n        this.setState({\n          clients: data\n        }, () => {// console.log(this.state.clients)\n        });\n      }).catch(error => {\n        console.log(error);\n      });\n    };\n\n    this.saveDocumentToPdf = () => {\n      const input = document.getElementById('capture');\n      html2canvas(input).then(canvas => {\n        const imgData = canvas.toDataURL('image/png');\n        const pdf = new jsPDF();\n        pdf.addImage(imgData, 'PNG', 3, 12, 207, 190); // pdf.output('dataurlnewwindow');\n\n        pdf.save(\"invoice.pdf\");\n      });\n    };\n\n    this.alertmessage = () => {\n      if (this.state.message !== null) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 143\n          },\n          __self: this\n        }, React.createElement(\"strong\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 144\n          },\n          __self: this\n        }, this.state.message));\n      } else {\n        console.log('message error');\n      }\n    };\n\n    this.calculateTotal = () => {\n      let table = document.getElementById('invoiceTable'),\n          total = 0;\n\n      for (let index = 1; index < table.rows.length; index++) {\n        total += Number(table.rows[index].cells[2].innerHTML); // console.log(typeof(table.rows[index].cells[2].innerHTML));\n      } // console.log(\"total is\");\n      // let total = 0;\n      // this.state.item.forEach((items) => {\n      //     total += Number(items.price);\n      //     console.log(total);\n      // });\n\n\n      this.setState({\n        total: total\n      });\n    };\n\n    this.state = {\n      date: new Date().toDateString(),\n      invoice_id: Math.floor(Math.random() * 200000 + 1),\n      name: '',\n      address: '',\n      phone: '',\n      services: '',\n      revisions: '',\n      item: [],\n      total: '',\n      discount: '',\n      clients: [],\n      selectedClient: '',\n      selectedAddress: '',\n      tabrow: '',\n      message: '',\n      description: '',\n      qty: '',\n      price: ''\n    }; // console.log('date is ', this.state.date);\n    // console.log(\"serial no is\", this.state.invoice_id);\n  }\n\n  render() {\n    let _this$state2 = this.state,\n        total = _this$state2.total,\n        description = _this$state2.description,\n        qty = _this$state2.qty,\n        price = _this$state2.price,\n        date = _this$state2.date,\n        invoice_id = _this$state2.invoice_id; //   console.log(item)\n\n    return React.createElement(\"div\", {\n      className: \"container-fluid\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: this.submit,\n      ref: ref => this.generateInvoice = ref,\n      noValidate: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row m-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-sm-11 offset-sm-1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }, React.createElement(MDBCard, {\n      id: \"capture\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }, React.createElement(MDBCardBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      className: \"text-center\",\n      style: {\n        backgroundColor: \"#9ACD32\",\n        color: \"white\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }, \"INVOICE\"), React.createElement(\"div\", {\n      className: \"row m-0 p-0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-sm-4 align-self-center m-0 p-0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }, React.createElement(MDBInput, {\n      label: \"Date\",\n      disabled: true,\n      value: date,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    }), React.createElement(MDBInput, {\n      label: \"Id\",\n      disabled: true,\n      value: invoice_id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"col-sm-4 align-self-center m-0 p-0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: invoice,\n      width: \"100%\",\n      height: \"auto\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    }), \" \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    }), React.createElement(MDBCard, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189\n      },\n      __self: this\n    }, React.createElement(MDBCardBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190\n      },\n      __self: this\n    }, \"Mobile: +92 306 5619198\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    }), \"Email:contact@devzone.com.pk\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192\n      },\n      __self: this\n    }), \"Address: 42-5-A2 Township, Lahore, Pakistan\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193\n      },\n      __self: this\n    })))), React.createElement(\"div\", {\n      className: \"col-sm-4 m-0 p-0 align-self-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197\n      },\n      __self: this\n    })), this.alertmessage(), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-sm-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203\n      },\n      __self: this\n    }, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204\n      },\n      __self: this\n    }), React.createElement(\"select\", {\n      value: this.state.selectedClient,\n      className: \"browser-default custom-select\",\n      onChange: e => {\n        let ourClient = this.state.clients.filter(client => client.id == e.target.value).shift();\n        this.setState({\n          selectedClient: ourClient.cl_name,\n          address: ourClient.address,\n          phone: ourClient.number\n        });\n      },\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      key: Math.random(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218\n      },\n      __self: this\n    }, this.state.selectedClient), this.state.clients.map(cl => React.createElement(\"option\", {\n      key: cl.id,\n      value: cl.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219\n      },\n      __self: this\n    }, cl.cl_name)))), React.createElement(\"div\", {\n      className: \"col-sm-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223\n      },\n      __self: this\n    }, React.createElement(MDBInput, {\n      label: \"address\",\n      value: this.state.address // disabled={true}\n      ,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"col-sm-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231\n      },\n      __self: this\n    }, React.createElement(MDBInput, {\n      label: \"Phone no\",\n      value: this.state.phone // disabled={true}\n      ,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"container-fluid\",\n      style: {\n        borderStyle: \"groove\",\n        borderRadius: \"10px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      className: \"text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241\n      },\n      __self: this\n    }, \"Select services\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-sm-6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244\n      },\n      __self: this\n    }, \"Services\", React.createElement(\"select\", {\n      className: \"form-control\",\n      onChange: event => {\n        this.setState({\n          services: event.target.value\n        });\n      },\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249\n      },\n      __self: this\n    }, \"--Select Services\"), React.createElement(\"option\", {\n      value: \"seo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250\n      },\n      __self: this\n    }, \"SEO\"), React.createElement(\"option\", {\n      value: \"web development\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251\n      },\n      __self: this\n    }, \"Web Development\"), React.createElement(\"option\", {\n      value: \"mob app\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252\n      },\n      __self: this\n    }, \"MObile App\"), React.createElement(\"option\", {\n      value: \"graphic designing\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253\n      },\n      __self: this\n    }, \"Graphic Designing\")))), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-sm-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260\n      },\n      __self: this\n    }, React.createElement(MDBInput, {\n      id: \"myinput\",\n      label: \"Item-descrption\",\n      value: description,\n      type: \"text\",\n      onChange: e => {\n        document.getElementById('myinput').style.borderBottomColor = \"green\";\n        this.setState({\n          description: e.target.value\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"col-sm-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271\n      },\n      __self: this\n    }, React.createElement(MDBInput, {\n      id: \"myinput2\",\n      label: \"Qty\",\n      value: qty,\n      type: \"number\",\n      min: \"1\",\n      step: \"1\",\n      onChange: e => {\n        document.getElementById('myinput2').style.borderBottomColor = \"green\";\n        this.setState({\n          qty: e.target.value\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"col-sm-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 281\n      },\n      __self: this\n    }, React.createElement(MDBInput, {\n      id: \"myinput3\",\n      label: \"Price\",\n      value: price,\n      type: \"number\",\n      min: \"1\",\n      step: \"1\",\n      onChange: e => {\n        document.getElementById('myinput3').style.borderBottomColor = \"green\";\n        this.setState({\n          price: e.target.value\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 282\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"col-sm-5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 291\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: e => {\n        e.preventDefault();\n\n        if (this.state.description === null || this.state.qty === null || this.state.price === null || this.state.description === '' || this.state.qty === '' || this.state.price === '') {\n          //       let array=  document.getElementById(\"myinput\");\n          //        array.style.borderBottomColor=\"#FF0000\"\n          return document.getElementById(\"myinput\").style.borderColor = \"#FF0000\", document.getElementById(\"myinput2\").style.borderColor = \"#FF0000\", document.getElementById(\"myinput3\").style.borderColor = \"#FF0000\";\n        } else {\n          let newitem = {\n            incoice_id: invoice_id,\n            detail: this.state.description,\n            qty: this.state.qty,\n            price: this.state.price\n          };\n          this.setState({\n            item: [...this.state.item, newitem],\n            description: '',\n            qty: '',\n            price: ''\n          }, function () {// console.log('items array is', this.state.item);\n          });\n        }\n      },\n      color: \"transparent\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 292\n      },\n      __self: this\n    }, React.createElement(MDBIcon, {\n      icon: \"plus\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 322\n      },\n      __self: this\n    })))), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 325\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"col-md-8\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 328\n      },\n      __self: this\n    }, React.createElement(\"table\", {\n      id: \"invoiceTable\",\n      className: \"table table-bordered\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 329\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 330\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 331\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 332\n      },\n      __self: this\n    }, \"Description\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 333\n      },\n      __self: this\n    }, \"qunatity\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 334\n      },\n      __self: this\n    }, \"price\"))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 337\n      },\n      __self: this\n    }, this.state.item.map((item, index) => {\n      return React.createElement(\"tr\", {\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 342\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        onBlur: e => {\n          let el = e.target;\n          let row = el.closest('tr');\n          var i = row.rowIndex;\n          console.log(index);\n          console.log(i);\n          this.setState({\n            item: [...this.state.item.slice(0, index), Object.assign({}, this.state.item[index], {\n              detail: el.innerHTML\n            }), ...this.state.item.slice(index + 1)]\n          });\n        },\n        suppressContentEditableWarning: true,\n        contentEditable: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 343\n        },\n        __self: this\n      }, item.detail), React.createElement(\"td\", {\n        onBlur: e => {\n          let el = e.target;\n          let row = el.closest('tr');\n          var i = row.rowIndex;\n          console.log(index);\n          console.log(i);\n          this.setState({\n            item: [...this.state.item.slice(0, index), Object.assign({}, this.state.item[index], {\n              qty: el.innerHTML\n            }), ...this.state.item.slice(index + 1)]\n          });\n        },\n        suppressContentEditableWarning: true,\n        contentEditable: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 364\n        },\n        __self: this\n      }, item.qty), React.createElement(\"td\", {\n        onBlur: e => {\n          let el = e.target;\n          let row = el.closest('tr');\n          var i = row.rowIndex;\n          console.log(index);\n          console.log(i);\n          this.setState({\n            item: [...this.state.item.slice(0, index), Object.assign({}, this.state.item[index], {\n              price: el.innerHTML\n            }), ...this.state.item.slice(index + 1)]\n          });\n        },\n        suppressContentEditableWarning: true,\n        contentEditable: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 384\n        },\n        __self: this\n      }, item.price));\n    })))), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 414\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-sm-9\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 415\n      },\n      __self: this\n    }, React.createElement(MDBBtn, {\n      color: \"transparent\",\n      onClick: this.calculateTotal,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 415\n      },\n      __self: this\n    }, \"Calculated\"), React.createElement(MDBBtn, {\n      onClick: this.cleararray,\n      color: \"transparent\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 417\n      },\n      __self: this\n    }, React.createElement(MDBIcon, {\n      icon: \"broom\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 417\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"col-sm-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 420\n      },\n      __self: this\n    }, \"RS \", React.createElement(\"textarea\", {\n      onChange: () => {},\n      className: \"form-control\",\n      placeholder: \"Total\",\n      value: total,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 421\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 423\n      },\n      __self: this\n    })))), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 428\n      },\n      __self: this\n    }))), React.createElement(MDBBtn, {\n      onClick: this.printDocument,\n      color: \"info\",\n      className: \"pull-right\",\n      size: \"md\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 433\n      },\n      __self: this\n    }, React.createElement(MDBIcon, {\n      icon: \"file-pdf\",\n      size: \"lg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 434\n      },\n      __self: this\n    }), \" Convert to PDF\"), React.createElement(MDBBtn, {\n      color: \"success\",\n      type: \"submit\",\n      onClick: this.submit,\n      size: \"md\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 435\n      },\n      __self: this\n    }, React.createElement(MDBIcon, {\n      icon: \"save\",\n      size: \"lg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 437\n      },\n      __self: this\n    }), \" Save Record\")))));\n  }\n\n}\n\nexport default Generate;","map":{"version":3,"sources":["C:/Users/MUZAMAL-PC/Desktop/Talha related/bErp-invoice/clientside/src/components/generate.jsx"],"names":["React","Component","MDBBtn","MDBCard","MDBCardBody","MDBInput","MDBIcon","invoice","jsPDF","html2canvas","axios","servicesOptions","value","label","Generate","constructor","props","cleararray","setState","item","submit","e","preventDefault","form","generateInvoice","checkValidity","classList","add","state","invoice_id","selectedClient","address","phone","date","services","total","obj","slagme","name","number","total_amount","post","then","res","message","data","console","log","catch","err","Object3","error","window","location","reload","componentDidMount","fetch","response","json","clients","saveDocumentToPdf","input","document","getElementById","canvas","imgData","toDataURL","pdf","addImage","save","alertmessage","calculateTotal","table","index","rows","length","Number","cells","innerHTML","Date","toDateString","Math","floor","random","revisions","discount","selectedAddress","tabrow","description","qty","price","render","ref","backgroundColor","color","ourClient","filter","client","id","target","shift","cl_name","map","cl","borderStyle","borderRadius","event","style","borderBottomColor","borderColor","newitem","incoice_id","detail","el","row","closest","i","rowIndex","slice","Object","assign","printDocument"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { MDBBtn, MDBCard, MDBCardBody, MDBInput, MDBIcon, } from 'mdbreact';\r\nimport invoice from './devZone-Logo.png';\r\nimport jsPDF from 'jspdf';\r\nimport html2canvas from 'html2canvas';\r\nimport axios from 'axios';\r\n\r\n// const today = new Date();\r\n// const mydate = today.toDateString();\r\n// const id = Math.floor((Math.random() * 200000) + 1);\r\nconst servicesOptions = [\r\n    { value: 'seo', label: 'SEO' },\r\n    { value: 'web development', label: 'WEB DEVELOPMENT' },\r\n    { value: 'graphic designing', label: 'Graphics Designing' },\r\n    { value: 'mobile apps', label: 'Mobile Apps' }\r\n];\r\n// const revisionsOptions = [\r\n//     { value: 'no', label: 'none' },\r\n//     { value: '2', label: '2' },\r\n//     { value: '4', label: '4' },\r\n//     { value: '6', label: '6' },\r\n\r\n// ];\r\n\r\n\r\nclass Generate extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            date: new Date().toDateString(),\r\n            invoice_id: Math.floor((Math.random() * 200000) + 1),\r\n            name: '',\r\n            address: '',\r\n            phone: '',\r\n            services: '',\r\n            revisions: '',\r\n            item: [],\r\n            total: '',\r\n            discount: '',\r\n            clients: [],\r\n            selectedClient: '',\r\n            selectedAddress: '',\r\n            tabrow: '',\r\n            message: '',\r\n            description: '',\r\n            qty: '',\r\n            price: ''\r\n        }\r\n\r\n        // console.log('date is ', this.state.date);\r\n        // console.log(\"serial no is\", this.state.invoice_id);\r\n    }\r\n\r\n    cleararray = () => {\r\n        this.setState({ item: [] });\r\n    }\r\n\r\n    submit = (e) => {\r\n        e.preventDefault();\r\n        let form = this.generateInvoice;\r\n        if (form.checkValidity() === false) {\r\n            form.classList.add('was-validated');\r\n        } else {\r\n            let { invoice_id, selectedClient, address, phone, date, services, total, item } = this.state\r\n            const obj = {\r\n                slagme: invoice_id,\r\n                name: selectedClient,\r\n                address: address,\r\n                number: phone,\r\n                date: date,\r\n                services: services,\r\n                total_amount: total,\r\n            };\r\n            // console.log(obj)\r\n            axios.post('http://localhost:5000/brp/invoice', obj)\r\n                .then(res => {\r\n                    this.setState({ message: res.data.message });\r\n                    console.log(res.data);\r\n                    // this.setState({description:this.state.item[0].description},() =>{\r\n                    //                     //     console.log(this.state.description)})\r\n                    //                     // console.log(this.state.item)\r\n                })\r\n                .catch(err => {\r\n                    console.log(err)\r\n                });\r\n            const Object3 = item;\r\n\r\n            console.log(Object3)\r\n            axios.post('http://localhost:5000/brp/itemsdata', Object3)\r\n                .then(res => {\r\n                    console.log(res)\r\n                })\r\n                .catch(error => console.log(error))\r\n            window.location.reload(3);\r\n        }\r\n    };\r\n\r\n\r\n    /*\r\nupdateRow=(e)=>{\r\n\r\n    let updatedItem = {\r\n        description: this.state.description,\r\n        qty: this.state.qty,\r\n        price: this.state.price\r\n    };\r\n\r\n    this.setState({item: [...this.state.updateditem,updatedItem]}, function () {\r\n        console.log(this.state.item);\r\n    });\r\n\r\n}*/\r\n    componentDidMount = () => {\r\n        fetch(\"http://localhost:5000/brp/clients\")\r\n            .then((response) => {\r\n                return response.json();\r\n            })\r\n            .then(data => {\r\n                // console.log(data);\r\n                this.setState({ clients: data }, () => {\r\n                    // console.log(this.state.clients)\r\n                });\r\n            }).catch(error => {\r\n                console.log(error);\r\n            });\r\n    }\r\n\r\n    saveDocumentToPdf = () => {\r\n        const input = document.getElementById('capture');\r\n        html2canvas(input)\r\n            .then((canvas) => {\r\n                const imgData = canvas.toDataURL('image/png');\r\n                const pdf = new jsPDF();\r\n                pdf.addImage(imgData, 'PNG', 3, 12, 207, 190);\r\n                // pdf.output('dataurlnewwindow');\r\n                pdf.save(\"invoice.pdf\");\r\n            });\r\n    }\r\n\r\n    alertmessage = () => {\r\n        if (this.state.message !== null) {\r\n            return (\r\n                <div>\r\n                    <strong>{this.state.message}</strong>\r\n                </div>\r\n            )\r\n        } else {\r\n            console.log('message error');\r\n        }\r\n    }\r\n\r\n    calculateTotal = () => {\r\n        let table = document.getElementById('invoiceTable'), total = 0\r\n        for (let index = 1; index < table.rows.length; index++) {\r\n            total += Number(table.rows[index].cells[2].innerHTML)\r\n            // console.log(typeof(table.rows[index].cells[2].innerHTML));\r\n        }\r\n        // console.log(\"total is\");\r\n        // let total = 0;\r\n        // this.state.item.forEach((items) => {\r\n\r\n        //     total += Number(items.price);\r\n        //     console.log(total);\r\n        // });\r\n        this.setState({ total: total })\r\n    };\r\n\r\n\r\n    render() {\r\n\r\n        let { total, description, qty, price, date, invoice_id } = this.state;\r\n        //   console.log(item)\r\n        return (\r\n            <div className=\"container-fluid\">\r\n                <form onSubmit={this.submit} ref={ref => this.generateInvoice = ref} noValidate>\r\n                    <div className=\"row m-4\">\r\n                        <div className=\"col-sm-11 offset-sm-1\">\r\n                            <MDBCard id=\"capture\">\r\n                                <MDBCardBody>\r\n                                    <h2 className=\"text-center\"\r\n                                        style={{ backgroundColor: \"#9ACD32\", color: \"white\" }}>INVOICE</h2>\r\n                                    <div className=\"row m-0 p-0\">\r\n                                        <div className=\"col-sm-4 align-self-center m-0 p-0\">\r\n                                            <MDBInput label=\"Date\" disabled value={date} />\r\n                                            <MDBInput label=\"Id\" disabled value={invoice_id} />\r\n                                        </div>\r\n                                        <div className=\"col-sm-4 align-self-center m-0 p-0\">\r\n                                            <img src={invoice} width=\"100%\" height=\"auto\" /> <br />\r\n                                            <MDBCard>\r\n                                                <MDBCardBody>\r\n                                                    Mobile: +92 306 5619198<br />\r\n                                                    Email:contact@devzone.com.pk<br />\r\n                                                    Address: 42-5-A2 Township, Lahore, Pakistan<br />\r\n                                                </MDBCardBody>\r\n                                            </MDBCard>\r\n                                        </div>\r\n                                        <div className=\"col-sm-4 m-0 p-0 align-self-center\">\r\n\r\n                                        </div>\r\n                                    </div>\r\n                                    {this.alertmessage()}\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-sm-4\">\r\n                                            <br />\r\n\r\n                                            <select value={this.state.selectedClient}\r\n                                                className=\"browser-default custom-select\"\r\n                                                onChange={(e) => {\r\n                                                    let ourClient = this.state.clients.filter(client => client.id == e.target.value).shift()\r\n                                                    this.setState({\r\n                                                        selectedClient: ourClient.cl_name,\r\n                                                        address: ourClient.address,\r\n                                                        phone: ourClient.number\r\n\r\n                                                    })\r\n                                                }}\r\n                                                required>\r\n                                                <option key={Math.random()}>{this.state.selectedClient}</option>\r\n                                                {this.state.clients.map((cl) => <option key={cl.id}\r\n                                                    value={cl.id}>{cl.cl_name}</option>)}\r\n                                            </select>\r\n                                        </div>\r\n                                        <div className=\"col-sm-4\">\r\n                                            <MDBInput label=\"address\" value={this.state.address}\r\n                                                // disabled={true}\r\n                                                required\r\n                                            />\r\n\r\n                                        </div>\r\n\r\n                                        <div className=\"col-sm-4\">\r\n\r\n                                            <MDBInput label=\"Phone no\"\r\n                                                value={this.state.phone}\r\n                                                // disabled={true}\r\n                                                required />\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"container-fluid\"\r\n                                        style={{ borderStyle: \"groove\", borderRadius: \"10px\" }}>\r\n                                        <strong className=\"text-center\">Select services</strong>\r\n                                        <p></p>\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-sm-6\">\r\n                                                Services\r\n                                                    <select className=\"form-control\" onChange={event => {\r\n                                                    this.setState({ services: event.target.value })\r\n                                                }} required>\r\n                                                    <option>--Select Services</option>\r\n                                                    <option value=\"seo\">SEO</option>\r\n                                                    <option value=\"web development\">Web Development</option>\r\n                                                    <option value=\"mob app\">MObile App</option>\r\n                                                    <option value=\"graphic designing\">Graphic Designing</option>\r\n                                                </select>\r\n                                            </div>\r\n\r\n                                        </div>\r\n                                        <div className=\"row\">\r\n\r\n                                            <div className=\"col-sm-4\">\r\n\r\n                                                <MDBInput id=\"myinput\" label=\"Item-descrption\" value={description}\r\n                                                    type=\"text\"\r\n                                                    onChange={e => {\r\n                                                        document.getElementById('myinput').style.borderBottomColor = \"green\"\r\n                                                        this.setState({ description: e.target.value })\r\n                                                    }}\r\n\r\n                                                />\r\n                                            </div>\r\n                                            <div className=\"col-sm-2\">\r\n                                                <MDBInput id=\"myinput2\" label=\"Qty\" value={qty} type=\"number\"\r\n                                                    min=\"1\" step=\"1\"\r\n                                                    onChange={e => {\r\n                                                        document.getElementById('myinput2').style.borderBottomColor = \"green\"\r\n                                                        this.setState({ qty: e.target.value })\r\n                                                    }}\r\n\r\n                                                />\r\n                                            </div>\r\n                                            <div className=\"col-sm-3\">\r\n                                                <MDBInput id=\"myinput3\" label=\"Price\" value={price} type=\"number\"\r\n                                                    min=\"1\" step=\"1\"\r\n                                                    onChange={e => {\r\n                                                        document.getElementById('myinput3').style.borderBottomColor = \"green\"\r\n                                                        this.setState({ price: e.target.value })\r\n                                                    }}\r\n\r\n                                                />\r\n                                            </div>\r\n                                            <div className=\"col-sm-5\">\r\n                                                <button onClick={(e) => {\r\n                                                    e.preventDefault()\r\n                                                    if (this.state.description === null || this.state.qty === null || this.state.price === null || this.state.description === '' || this.state.qty === '' || this.state.price === '') {\r\n                                                        //       let array=  document.getElementById(\"myinput\");\r\n\r\n                                                        //        array.style.borderBottomColor=\"#FF0000\"\r\n                                                        return (\r\n                                                            document.getElementById(\"myinput\").style.borderColor = \"#FF0000\",\r\n                                                            document.getElementById(\"myinput2\").style.borderColor = \"#FF0000\",\r\n                                                            document.getElementById(\"myinput3\").style.borderColor = \"#FF0000\"\r\n                                                        )\r\n                                                    } else {\r\n\r\n                                                        let newitem = {\r\n                                                            incoice_id: invoice_id,\r\n                                                            detail: this.state.description,\r\n                                                            qty: this.state.qty,\r\n                                                            price: this.state.price\r\n                                                        };\r\n                                                        this.setState({\r\n                                                            item: [...this.state.item, newitem],\r\n                                                            description: '',\r\n                                                            qty: '',\r\n                                                            price: ''\r\n                                                        }, function () {\r\n                                                            // console.log('items array is', this.state.item);\r\n\r\n                                                        });\r\n                                                    }\r\n                                                }\r\n                                                } color=\"transparent\"><MDBIcon icon=\"plus\" /></button>\r\n                                            </div>\r\n                                        </div>\r\n                                        <br />\r\n\r\n\r\n                                        <div className=\"col-md-8\">\r\n                                            <table id='invoiceTable' className=\"table table-bordered\">\r\n                                                <thead>\r\n                                                    <tr>\r\n                                                        <th>Description</th>\r\n                                                        <th>qunatity</th>\r\n                                                        <th>price</th>\r\n                                                    </tr>\r\n                                                </thead>\r\n                                                <tbody>\r\n                                                    {this.state.item.map((item, index) => {\r\n                                                        return (\r\n\r\n\r\n                                                            <tr key={index}>\r\n                                                                <td\r\n\r\n                                                                    onBlur={(e) => {\r\n                                                                        let el = e.target;\r\n                                                                        let row = el.closest('tr');\r\n                                                                        var i = row.rowIndex;\r\n                                                                        console.log(index)\r\n                                                                        console.log(i)\r\n                                                                        this.setState({\r\n                                                                            item: [\r\n                                                                                ...this.state.item.slice(0, index),\r\n                                                                                Object.assign({}, this.state.item[index], { detail: el.innerHTML }),\r\n                                                                                ...this.state.item.slice(index + 1)\r\n                                                                            ]\r\n                                                                        });\r\n                                                                    }\r\n                                                                    }\r\n\r\n\r\n                                                                    suppressContentEditableWarning={true}\r\n                                                                    contentEditable={true}>{item.detail}</td>\r\n                                                                <td\r\n                                                                    onBlur={(e) => {\r\n                                                                        let el = e.target;\r\n                                                                        let row = el.closest('tr');\r\n                                                                        var i = row.rowIndex;\r\n                                                                        console.log(index);\r\n                                                                        console.log(i);\r\n                                                                        this.setState({\r\n                                                                            item: [\r\n                                                                                ...this.state.item.slice(0, index),\r\n                                                                                Object.assign({}, this.state.item[index], { qty: el.innerHTML }),\r\n                                                                                ...this.state.item.slice(index + 1)\r\n                                                                            ]\r\n                                                                        });\r\n                                                                    }\r\n                                                                    }\r\n\r\n\r\n                                                                    suppressContentEditableWarning={true}\r\n                                                                    contentEditable={true}>{item.qty}</td>\r\n                                                                <td\r\n                                                                    onBlur={(e) => {\r\n                                                                        let el = e.target;\r\n                                                                        let row = el.closest('tr');\r\n                                                                        var i = row.rowIndex;\r\n                                                                        console.log(index)\r\n                                                                        console.log(i)\r\n                                                                        this.setState({\r\n                                                                            item: [\r\n                                                                                ...this.state.item.slice(0, index),\r\n                                                                                Object.assign({}, this.state.item[index], { price: el.innerHTML }),\r\n                                                                                ...this.state.item.slice(index + 1)\r\n                                                                            ]\r\n                                                                        });\r\n                                                                    }\r\n                                                                    }\r\n\r\n\r\n                                                                    suppressContentEditableWarning={true}\r\n                                                                    contentEditable={true}>{item.price}</td>\r\n\r\n                                                            </tr>\r\n\r\n                                                        )\r\n                                                    })}\r\n                                                </tbody>\r\n\r\n                                            </table>\r\n                                        </div>\r\n\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-sm-9\"><MDBBtn color=\"transparent\"\r\n                                                onClick={this.calculateTotal}>Calculated</MDBBtn>\r\n                                                <MDBBtn onClick={this.cleararray} color=\"transparent\"><MDBIcon\r\n                                                    icon=\"broom\" /></MDBBtn>\r\n                                            </div>\r\n                                            <div className=\"col-sm-2\">\r\n                                                RS <textarea onChange={() => {\r\n                                                }} className=\"form-control\" placeholder=\"Total\" value={total} />\r\n                                                <p></p>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                    </div>\r\n                                    <p></p>\r\n\r\n                                </MDBCardBody>\r\n                            </MDBCard>\r\n\r\n                            <MDBBtn onClick={this.printDocument} color=\"info\" className=\"pull-right\"\r\n                                size=\"md\"><MDBIcon icon=\"file-pdf\" size=\"lg\" /> Convert to PDF</MDBBtn>\r\n                            <MDBBtn color=\"success\" type=\"submit\"\r\n                                onClick={this.submit}\r\n                                size=\"md\"><MDBIcon icon=\"save\" size=\"lg\" /> Save Record</MDBBtn>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default Generate;"]},"metadata":{},"sourceType":"module"}